/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.wunda.oab.objecteditors;

import org.openide.util.NbBundle;

import de.cismet.cids.custom.wunda.oab.AbstractCidsBeanRenderer;

/**
 * DOCUMENT ME!
 *
 * @author   martin.scholl@cismet.de
 * @version  1.0
 */
public class Oab_ProjektEditor extends AbstractCidsBeanRenderer {

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private de.cismet.cids.editors.DefaultBindableDateChooser defaultBindableDateChooserFinishedOn;
    private javax.swing.JLabel lblConditionMeasureTitle;
    private javax.swing.JLabel lblConditionsMeasures;
    private javax.swing.JLabel lblContractor;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblFinishedOn;
    private javax.swing.JLabel lblName;
    private javax.swing.JList lstConditionsMeasures;
    private de.cismet.cids.custom.wunda.oab.objecteditors.Oab_Zustand_MassnahmeEditor oab_Zustand_MassnahmeEditor;
    private javax.swing.JPanel pnlConditionAndMeasures;
    private javax.swing.JPanel pnlConditionMeasure;
    private javax.swing.JPanel pnlData;
    private javax.swing.JPanel pnlEmbeddedConditionMeasure;
    private javax.swing.JScrollPane scpConditionsMeasures;
    private javax.swing.JScrollPane scpDescription;
    private de.cismet.tools.gui.SemiRoundedPanel semiRoundedPanelConditionMeasure;
    private de.cismet.tools.gui.SemiRoundedPanel semiRoundedPanelConditionsAndMeasures;
    private de.cismet.tools.gui.SemiRoundedPanel semiRoundedPanelData;
    private javax.swing.JTextPane txpDescription;
    private javax.swing.JTextField txtContractor;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form OABProjectEditor.
     */
    public Oab_ProjektEditor() {
        initComponents();
    }

    //~ Methods ----------------------------------------------------------------

    @Override
    protected void init() {
        // noop (yet :D)
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlConditionMeasure = new javax.swing.JPanel();
        semiRoundedPanelConditionMeasure = new de.cismet.tools.gui.SemiRoundedPanel();
        lblConditionMeasureTitle = new javax.swing.JLabel();
        pnlEmbeddedConditionMeasure = new javax.swing.JPanel();
        oab_Zustand_MassnahmeEditor = new de.cismet.cids.custom.wunda.oab.objecteditors.Oab_Zustand_MassnahmeEditor();
        pnlData = new javax.swing.JPanel();
        semiRoundedPanelData = new de.cismet.tools.gui.SemiRoundedPanel();
        lblData = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblDescription = new javax.swing.JLabel();
        scpDescription = new javax.swing.JScrollPane();
        txpDescription = new javax.swing.JTextPane();
        lblFinishedOn = new javax.swing.JLabel();
        defaultBindableDateChooserFinishedOn = new de.cismet.cids.editors.DefaultBindableDateChooser();
        lblContractor = new javax.swing.JLabel();
        txtContractor = new javax.swing.JTextField();
        pnlConditionAndMeasures = new javax.swing.JPanel();
        semiRoundedPanelConditionsAndMeasures = new de.cismet.tools.gui.SemiRoundedPanel();
        lblConditionsMeasures = new javax.swing.JLabel();
        scpConditionsMeasures = new javax.swing.JScrollPane();
        lstConditionsMeasures = new javax.swing.JList();

        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        pnlConditionMeasure.setOpaque(false);
        pnlConditionMeasure.setLayout(new java.awt.GridBagLayout());

        semiRoundedPanelConditionMeasure.setBackground(new java.awt.Color(51, 51, 51));
        semiRoundedPanelConditionMeasure.setLayout(new java.awt.GridBagLayout());

        lblConditionMeasureTitle.setFont(new java.awt.Font("Lucida Grande", 0, 14));                          // NOI18N
        lblConditionMeasureTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblConditionMeasureTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.openide.awt.Mnemonics.setLocalizedText(
            lblConditionMeasureTitle,
            NbBundle.getMessage(Oab_ProjektEditor.class, "Oab_ProjektEditor.lblConditionMeasureTitle.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        semiRoundedPanelConditionMeasure.add(lblConditionMeasureTitle, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        pnlConditionMeasure.add(semiRoundedPanelConditionMeasure, gridBagConstraints);

        pnlEmbeddedConditionMeasure.setBorder(javax.swing.BorderFactory.createLineBorder(
                new java.awt.Color(51, 51, 51)));
        pnlEmbeddedConditionMeasure.setOpaque(false);
        pnlEmbeddedConditionMeasure.setLayout(new java.awt.BorderLayout());
        pnlEmbeddedConditionMeasure.add(oab_Zustand_MassnahmeEditor, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pnlConditionMeasure.add(pnlEmbeddedConditionMeasure, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(pnlConditionMeasure, gridBagConstraints);

        pnlData.setOpaque(false);
        pnlData.setLayout(new java.awt.GridBagLayout());

        semiRoundedPanelData.setBackground(new java.awt.Color(51, 51, 51));
        semiRoundedPanelData.setLayout(new java.awt.GridBagLayout());

        lblData.setFont(new java.awt.Font("Lucida Grande", 0, 14));                          // NOI18N
        lblData.setForeground(new java.awt.Color(255, 255, 255));
        lblData.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.openide.awt.Mnemonics.setLocalizedText(
            lblData,
            NbBundle.getMessage(Oab_ProjektEditor.class, "Oab_ProjektEditor.lblData.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        semiRoundedPanelData.add(lblData, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        pnlData.add(semiRoundedPanelData, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(
            lblName,
            NbBundle.getMessage(Oab_ProjektEditor.class, "Oab_ProjektEditor.lblName.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlData.add(lblName, gridBagConstraints);

        txtName.setText(NbBundle.getMessage(Oab_ProjektEditor.class, "Oab_ProjektEditor.txtName.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlData.add(txtName, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(
            lblDescription,
            NbBundle.getMessage(Oab_ProjektEditor.class, "Oab_ProjektEditor.lblDescription.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlData.add(lblDescription, gridBagConstraints);

        txpDescription.setText(NbBundle.getMessage(Oab_ProjektEditor.class, "Oab_ProjektEditor.txpDescription.text")); // NOI18N
        scpDescription.setViewportView(txpDescription);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlData.add(scpDescription, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(
            lblFinishedOn,
            NbBundle.getMessage(Oab_ProjektEditor.class, "Oab_ProjektEditor.lblFinishedOn.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlData.add(lblFinishedOn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlData.add(defaultBindableDateChooserFinishedOn, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(
            lblContractor,
            NbBundle.getMessage(Oab_ProjektEditor.class, "Oab_ProjektEditor.lblContractor.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlData.add(lblContractor, gridBagConstraints);

        txtContractor.setText(NbBundle.getMessage(Oab_ProjektEditor.class, "Oab_ProjektEditor.txtContractor.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlData.add(txtContractor, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(pnlData, gridBagConstraints);

        pnlConditionAndMeasures.setOpaque(false);
        pnlConditionAndMeasures.setLayout(new java.awt.GridBagLayout());

        semiRoundedPanelConditionsAndMeasures.setBackground(new java.awt.Color(51, 51, 51));
        semiRoundedPanelConditionsAndMeasures.setLayout(new java.awt.GridBagLayout());

        lblConditionsMeasures.setFont(new java.awt.Font("Lucida Grande", 0, 14));                          // NOI18N
        lblConditionsMeasures.setForeground(new java.awt.Color(255, 255, 255));
        lblConditionsMeasures.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.openide.awt.Mnemonics.setLocalizedText(
            lblConditionsMeasures,
            NbBundle.getMessage(Oab_ProjektEditor.class, "Oab_ProjektEditor.lblConditionsMeasures.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        semiRoundedPanelConditionsAndMeasures.add(lblConditionsMeasures, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        pnlConditionAndMeasures.add(semiRoundedPanelConditionsAndMeasures, gridBagConstraints);

        lstConditionsMeasures.setModel(new javax.swing.AbstractListModel() {

                String[] strings = { "Ist", "Prognose", "Sanierung 1", "Sanierung 2", "Sanierung 3" };

                @Override
                public int getSize() {
                    return strings.length;
                }
                @Override
                public Object getElementAt(final int i) {
                    return strings[i];
                }
            });
        scpConditionsMeasures.setViewportView(lstConditionsMeasures);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnlConditionAndMeasures.add(scpConditionsMeasures, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        add(pnlConditionAndMeasures, gridBagConstraints);
    } // </editor-fold>//GEN-END:initComponents
}
