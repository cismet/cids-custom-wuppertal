/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.wunda_blau.band;

import org.apache.log4j.Logger;

import org.openide.awt.Mnemonics;
import org.openide.util.NbBundle;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.Box;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;

import de.cismet.cids.dynamics.CidsBean;

import de.cismet.tools.gui.RoundedPanel;
import de.cismet.tools.gui.SemiRoundedPanel;

/**
 * DOCUMENT ME!
 *
 * @author   jruiz
 * @version  $Revision$, $Date$
 */
public class ObjectChooserPanel extends javax.swing.JPanel {

    //~ Static fields/initializers ---------------------------------------------

    private static final Logger LOG = Logger.getLogger(ObjectChooserPanel.class);

    //~ Instance fields --------------------------------------------------------

    // Variables declaration - do not modify//GEN-BEGIN:variables
    JPanel panCreation;
    // End of variables declaration//GEN-END:variables

    private String[] objectNames;
    private String[] tableNames;
    private TreppenBand parentBand;
    private double from;
    private double till;

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates a new TreppeLaufPanel object.
     */
    public ObjectChooserPanel() {
        initComponents();
    }

    /**
     * Creates a new TreppeLaufPanel object.
     *
     * @param  objectNames  connectionContext DOCUMENT ME!
     * @param  tableNames   DOCUMENT ME!
     * @param  parentBand   DOCUMENT ME!
     * @param  from         DOCUMENT ME!
     * @param  till         DOCUMENT ME!
     */
    public ObjectChooserPanel(final String[] objectNames,
            final String[] tableNames,
            final TreppenBand parentBand,
            final double from,
            final double till) {
        initComponents();
        this.objectNames = objectNames;
        this.tableNames = tableNames;
        this.parentBand = parentBand;
        this.from = from;
        this.till = till;

        panCreation.setLayout(new GridLayout(objectNames.length, 1));

        for (int i = 0; i < objectNames.length; ++i) {
            final JButton button = new JButton(objectNames[i] + " erstellen");
            button.addActionListener(new ButtonActionListener(tableNames[i]));
            panCreation.add(button);
        }
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        GridBagConstraints gridBagConstraints;

        final ButtonGroup buttonGroup1 = new ButtonGroup();
        final JPanel panChooser = new JPanel();
        final RoundedPanel panAllgemein = new RoundedPanel();
        final SemiRoundedPanel panBeschreibungTitle = new SemiRoundedPanel();
        final JLabel lblHeaderAllgemein4 = new JLabel();
        final JPanel panBeschreibungContent = new JPanel();
        final JPanel jPanel48 = new JPanel();
        final Box.Filler filler4 = new Box.Filler(new Dimension(0, 0), new Dimension(0, 0), new Dimension(0, 32767));
        panCreation = new JPanel();
        final Box.Filler filler1 = new Box.Filler(new Dimension(0, 0), new Dimension(0, 0), new Dimension(0, 32767));
        final Box.Filler filler2 = new Box.Filler(new Dimension(0, 0), new Dimension(0, 0), new Dimension(0, 32767));

        setName("Form"); // NOI18N
        setOpaque(false);
        setLayout(new GridBagLayout());

        panChooser.setName("panChooser"); // NOI18N
        panChooser.setOpaque(false);
        panChooser.setLayout(new GridBagLayout());

        panAllgemein.setName("panAllgemein"); // NOI18N
        panAllgemein.setLayout(new GridBagLayout());

        panBeschreibungTitle.setBackground(new Color(51, 51, 51));
        panBeschreibungTitle.setName("panBeschreibungTitle"); // NOI18N
        panBeschreibungTitle.setLayout(new FlowLayout());

        lblHeaderAllgemein4.setForeground(new Color(255, 255, 255));
        lblHeaderAllgemein4.setHorizontalAlignment(SwingConstants.CENTER);
        Mnemonics.setLocalizedText(
            lblHeaderAllgemein4,
            NbBundle.getMessage(ObjectChooserPanel.class, "ObjectChooserPanel.lblHeaderAllgemein4.text")); // NOI18N
        lblHeaderAllgemein4.setName("lblHeaderAllgemein4");                                                // NOI18N
        panBeschreibungTitle.add(lblHeaderAllgemein4);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.NORTH;
        panAllgemein.add(panBeschreibungTitle, gridBagConstraints);

        panBeschreibungContent.setName("panBeschreibungContent"); // NOI18N
        panBeschreibungContent.setOpaque(false);
        panBeschreibungContent.setLayout(new GridBagLayout());

        jPanel48.setName("jPanel48"); // NOI18N
        jPanel48.setOpaque(false);
        jPanel48.setLayout(new GridBagLayout());

        filler4.setName("filler4"); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new Insets(19, 0, 19, 0);
        jPanel48.add(filler4, gridBagConstraints);

        panCreation.setName("panCreation"); // NOI18N
        panCreation.setOpaque(false);
        panCreation.setLayout(new GridLayout(1, 0, 0, 10));
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new Insets(10, 0, 0, 10);
        jPanel48.add(panCreation, gridBagConstraints);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new Insets(5, 5, 5, 5);
        panBeschreibungContent.add(jPanel48, gridBagConstraints);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panAllgemein.add(panBeschreibungContent, gridBagConstraints);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.anchor = GridBagConstraints.NORTH;
        panChooser.add(panAllgemein, gridBagConstraints);

        filler1.setName("filler1"); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panChooser.add(filler1, gridBagConstraints);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.anchor = GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new Insets(0, 0, 0, 5);
        add(panChooser, gridBagConstraints);

        filler2.setName("filler2"); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        add(filler2, gridBagConstraints);
    }                               // </editor-fold>//GEN-END:initComponents

    //~ Inner Classes ----------------------------------------------------------

    // Variables declaration - do not modify

    /**
     * DOCUMENT ME!
     *
     * @version  $Revision$, $Date$
     */
    private class ButtonActionListener implements ActionListener {

        //~ Instance fields ----------------------------------------------------

        private final String tableName;

        //~ Constructors -------------------------------------------------------

        /**
         * Creates a new ButtonActionListener object.
         *
         * @param  tableName  DOCUMENT ME!
         */
        public ButtonActionListener(final String tableName) {
            this.tableName = tableName;
        }

        //~ Methods ------------------------------------------------------------

        @Override
        public void actionPerformed(final ActionEvent e) {
            try {
                final CidsBean objectBean = TreppenBand.createNewCidsBeanFromTableName(tableName);
                TreppeBandMember bandMember;

                if (objectBean.getClass().getName().endsWith("Treppe_podest")) {
                    // podest object have a fix length
                    bandMember = parentBand.addMember(
                            objectBean,
                            from,
                            from
                                    + PodestBandMember.ELEMENT_WIDTH,
                            parentBand.getSide());
                } else {
                    bandMember = parentBand.addMember(objectBean, from, till, parentBand.getSide());
                }

                parentBand.getParent().setSelectedMember(bandMember);
            } catch (Exception ex) {
                LOG.error("Cannot create new band member", ex);
            }
        }
    }
}
