/***************************************************
 *
 * cismet GmbH, Saarbruecken, Germany
 *
 *              ... and it just works.
 *
 ****************************************************/
/*
 * BaulastWindowSearch.java
 *
 * Created on 09.12.2010, 14:33:10
 */
package de.cismet.cids.custom.wunda_blau.search;

import Sirius.navigator.connection.SessionManager;
import Sirius.navigator.method.MethodManager;

import Sirius.server.middleware.types.MetaClass;
import Sirius.server.middleware.types.Node;
import Sirius.server.search.CidsServerSearch;



import java.util.Collection;
import java.util.concurrent.ExecutionException;

import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.SwingWorker;

import de.cismet.cids.custom.objectrenderer.utils.CidsBeanSupport;



import de.cismet.cids.navigator.utils.ClassCacheMultiple;

import de.cismet.cids.tools.search.clientstuff.CidsWindowSearch;



import de.cismet.tools.CismetThreadPool;


/**
 * DOCUMENT ME!
 *
 * @author   stefan
 * @version  $Revision$, $Date$
 */
@org.openide.util.lookup.ServiceProvider(service = CidsWindowSearch.class)
public class AlkisWindowSearch extends javax.swing.JPanel implements CidsWindowSearch {

    //~ Static fields/initializers ---------------------------------------------
    static final org.apache.log4j.Logger log = org.apache.log4j.Logger.getLogger(AlkisWindowSearch.class);
    //~ Instance fields --------------------------------------------------------
    private final MetaClass mc;
    private final ImageIcon icon;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private org.jdesktop.swingx.JXBusyLabel lblBusy;
    private javax.swing.JPanel panCommand;
    private javax.swing.JPanel panSearch;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtVorname;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------
    /**
     * Creates new form BaulastWindowSearch.
     */
    public AlkisWindowSearch() {
        mc = ClassCacheMultiple.getMetaClass(CidsBeanSupport.DOMAIN_NAME, "ALKIS_LANDPARCEL");
        icon = new ImageIcon(mc.getIconData());
        initComponents();

    }

    //~ Methods ----------------------------------------------------------------
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        panSearch = new javax.swing.JPanel();
        panCommand = new javax.swing.JPanel();
        lblBusy = new org.jdesktop.swingx.JXBusyLabel();
        btnSearch = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtVorname = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();

        setMaximumSize(new java.awt.Dimension(325, 460));
        setMinimumSize(new java.awt.Dimension(325, 460));
        setPreferredSize(new java.awt.Dimension(325, 460));
        setLayout(new java.awt.BorderLayout());

        panSearch.setMaximumSize(new java.awt.Dimension(400, 150));
        panSearch.setMinimumSize(new java.awt.Dimension(400, 150));
        panSearch.setPreferredSize(new java.awt.Dimension(400, 150));
        panSearch.setLayout(new java.awt.GridBagLayout());

        panCommand.add(lblBusy);

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/cismet/cids/custom/wunda_blau/res/zoom.gif"))); // NOI18N
        btnSearch.setText("Suchen");
        btnSearch.setToolTipText("Suche starten");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        panCommand.add(btnSearch);

        jPanel1.setMaximumSize(new java.awt.Dimension(26, 26));
        jPanel1.setMinimumSize(new java.awt.Dimension(26, 26));
        jPanel1.setPreferredSize(new java.awt.Dimension(26, 26));
        panCommand.add(jPanel1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panSearch.add(panCommand, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Eigent√ºmer"));
        jPanel2.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(txtVorname, gridBagConstraints);

        jLabel1.setText("Vorname:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(txtName, gridBagConstraints);

        jLabel2.setText("Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panSearch.add(jPanel2, gridBagConstraints);

        jPanel6.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weighty = 1.0;
        panSearch.add(jPanel6, gridBagConstraints);

        add(panSearch, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void btnSearchActionPerformed(final java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        performSearch();
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * DOCUMENT ME!
     */
    private void performSearch() {
        btnSearch.setEnabled(false);
        lblBusy.setBusy(true);
        final SwingWorker<Void, Void> searchWorker = new SwingWorker<Void, Void>() {

            @Override
            protected Void doInBackground() throws Exception {
                final Collection<Node> r = SessionManager.getProxy().customServerSearch(SessionManager.getSession().getUser(), getServerSearch());
                MethodManager.getManager().showSearchResults(r.toArray(new Node[r.size()]), false);
                return null;
            }

            @Override
            protected void done() {
                try {
                    get();
                } catch (InterruptedException ex) {
                    log.warn(ex, ex);
                } catch (ExecutionException ex) {
                    log.error(ex, ex);
                } finally {
                    lblBusy.setBusy(false);
                    btnSearch.setEnabled(true);
                }
            }
        };
        CismetThreadPool.execute(searchWorker);
    }

    @Override
    public ImageIcon getIcon() {
        return icon;
    }

    @Override
    public String getName() {
        return "Alkis Suche";
    }

    @Override
    public JComponent getSearchWindowComponent() {
        return this;
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    private AlkisSearchInfo getAlkisInfoFromGUI() {
        final AlkisSearchInfo asi = new AlkisSearchInfo(txtName.getText(), txtVorname.getText());
        return asi;
    }

    @Override
    public CidsServerSearch getServerSearch() {
        final AlkisSearchInfo bsi = getAlkisInfoFromGUI();
        return new CidsAlkisSearchStatement(bsi);
    }
//    @Override
//    public boolean checkActionTag() {
//        try {
//            return SessionManager.getConnection()
//                        .getConfigAttr(SessionManager.getSession().getUser(), "navigator.alkis.search") != null;
//        } catch (ConnectionException ex) {
//            log.error("Can not validate ActionTag for Alkis Suche!", ex);
//            return false;
//        }
//    }
}
