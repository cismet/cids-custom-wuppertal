/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Alkis_pointRenderer.java
 *
 * Created on 10.09.2009, 15:52:16
 */
package de.cismet.cids.custom.objectrenderer.wunda_blau;

import de.aedsicad.aaaweb.service.alkis.info.ALKISInfoServices;
import de.aedsicad.aaaweb.service.util.LandParcel;
import de.cismet.cids.custom.objectrenderer.utils.ObjectRendererUIUtils;
import de.cismet.cids.custom.objectrenderer.utils.alkis.SOAPAccessProvider;
import de.cismet.cids.dynamics.CidsBean;
import de.cismet.cids.tools.metaobjectrenderer.CidsBeanRenderer;
import de.cismet.tools.CismetThreadPool;
import de.cismet.tools.collections.TypeSafeCollections;
import de.cismet.tools.gui.FooterComponentProvider;
import de.cismet.tools.gui.StaticSwingTools;
import de.cismet.tools.gui.TitleComponentProvider;
import java.awt.Color;
import java.awt.Font;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.List;
import java.util.logging.Level;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.SwingWorker;
import javax.swing.UIManager;
import javax.swing.plaf.FontUIResource;
import org.jdesktop.swingx.error.ErrorInfo;

/**
 * TODO!!!!
 * @author srichter
 */
public class Alkis_landparcelRenderer_old extends javax.swing.JPanel implements CidsBeanRenderer, TitleComponentProvider, FooterComponentProvider {

    static {
        UIManager.put("TaskPaneContainer.useGradient", Boolean.FALSE);

//        UIManager.put("TaskPaneContainer.background", Colors.LightGray.color(0.5f));

        UIManager.put("TaskPane.font", new FontUIResource(new Font("Verdana", Font.BOLD, 16)));

        UIManager.put("TaskPane.useGradient", Boolean.FALSE);

        UIManager.put("TaskPane.titleBackgroundGradientStart", Color.LIGHT_GRAY);

        UIManager.put("TaskPane.titleBackgroundGradientEnd", Color.GRAY);
    }
    private static final org.apache.log4j.Logger log = org.apache.log4j.Logger.getLogger(Alkis_landparcelRenderer_old.class);
    private final List<JLabel> retrieveableLabels;
    private SOAPAccessProvider soapProvider;
//    private ALKISSearchServices searchService;
    private ALKISInfoServices infoService;
    private LandParcel landparcel;
    private CidsBean cidsBean;
    private String title;

    /** Creates new form Alkis_pointRenderer */
    public Alkis_landparcelRenderer_old() {
        retrieveableLabels = TypeSafeCollections.newArrayList();
        try {
            soapProvider = new SOAPAccessProvider();
//            searchService = soapProvider.getAlkisSearchService();
            infoService = soapProvider.getAlkisInfoService();
        } catch (Exception ex) {
            log.fatal(ex, ex);
        }
        initComponents();
        jLabel1.setVisible(false);
        jXTaskPane1.setTitle("Weitere Informationen:");
        jXTaskPane1.setOpaque(false);
        jXTaskPane1.setCollapsed(true);
//        jXTaskPane1.setAnimated(false);
        jXTaskPane1.addPropertyChangeListener(new PropertyChangeListener() {

            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                //according to doc, there should be JXTaskePane.EXPANDED_CHANGED_KEY instead of "collapsed"...BUT...
                if ("collapsed".equals(evt.getPropertyName()) && Boolean.FALSE.equals(evt.getNewValue())) {
                    CismetThreadPool.execute(new RetrieveWorker());
                }
                log.fatal(evt.getPropertyName() + " " + evt.getOldValue() + " " + evt.getNewValue());
            }
        });
//        retrieveableLabels.add(lblTxtEigentuemerNachname);
//        retrieveableLabels.add(lblTxtFlurstueckcode);
//        retrieveableLabels.add(lblTxtAbmarkung);
//        retrieveableLabels.add(lblTxtModellart);
//        retrieveableLabels.add(lblTxtDienststelle);
//        retrieveableLabels.add(lblTxtLand);
//        retrieveableLabels.add(lblTxtDienststelle);
//        retrieveableLabels.add(lblTxtAnlass);
//        retrieveableLabels.add(lblTxtBemerkungAbmarkung);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        panTitle = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        panFooter = new javax.swing.JPanel();
        hlKarte = new org.jdesktop.swingx.JXHyperlink();
        hlFlurstuecksnachweisPdf = new org.jdesktop.swingx.JXHyperlink();
        hlFlurstuecksEigentumsnachweisPdf = new org.jdesktop.swingx.JXHyperlink();
        hlFlurstuecksEigentumsnachweisHtml = new org.jdesktop.swingx.JXHyperlink();
        hlFlurstuecksnachweisHtml = new org.jdesktop.swingx.JXHyperlink();
        lblLandparcelCode = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jXTaskPane1 = new org.jdesktop.swingx.JXTaskPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jXBusyLabel1 = new org.jdesktop.swingx.JXBusyLabel();

        panTitle.setOpaque(false);
        panTitle.setLayout(new java.awt.GridBagLayout());

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 18));
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setText("TITLE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        panTitle.add(lblTitle, gridBagConstraints);

        panFooter.setOpaque(false);
        panFooter.setLayout(new java.awt.GridBagLayout());

        hlKarte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/cismet/cids/custom/icons/pdf.png"))); // NOI18N
        hlKarte.setText("Karte (PDF)");
        hlKarte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hlKarteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        panFooter.add(hlKarte, gridBagConstraints);

        hlFlurstuecksnachweisPdf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/cismet/cids/custom/icons/pdf.png"))); // NOI18N
        hlFlurstuecksnachweisPdf.setText("Flurst端cksnachweis PDF");
        hlFlurstuecksnachweisPdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hlFlurstuecksnachweisPdfActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panFooter.add(hlFlurstuecksnachweisPdf, gridBagConstraints);

        hlFlurstuecksEigentumsnachweisPdf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/cismet/cids/custom/icons/pdf.png"))); // NOI18N
        hlFlurstuecksEigentumsnachweisPdf.setText("Flurst端cks- und Eigentumsnachweis PDF");
        hlFlurstuecksEigentumsnachweisPdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hlFlurstuecksEigentumsnachweisPdfActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panFooter.add(hlFlurstuecksEigentumsnachweisPdf, gridBagConstraints);

        hlFlurstuecksEigentumsnachweisHtml.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/cismet/cids/custom/icons/text-html.png"))); // NOI18N
        hlFlurstuecksEigentumsnachweisHtml.setText("Flurst端cks- und Eigentumsnachweis HTML");
        hlFlurstuecksEigentumsnachweisHtml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hlFlurstuecksEigentumsnachweisHtmlActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panFooter.add(hlFlurstuecksEigentumsnachweisHtml, gridBagConstraints);

        hlFlurstuecksnachweisHtml.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/cismet/cids/custom/icons/text-html.png"))); // NOI18N
        hlFlurstuecksnachweisHtml.setText("Flurst端cksnachweis HTML");
        hlFlurstuecksnachweisHtml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hlFlurstuecksnachweisHtmlActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panFooter.add(hlFlurstuecksnachweisHtml, gridBagConstraints);

        setLayout(new java.awt.GridBagLayout());

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.alkis_id}"), lblLandparcelCode, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("");
        binding.setSourceUnreadableValue("<Error>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblLandparcelCode, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel2.setText("Flurst端ckskennung:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel2, gridBagConstraints);

        jXTaskPane1.setOpaque(true);
        jXTaskPane1.getContentPane().setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(java.awt.Color.white);

        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1);

        jXTaskPane1.getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jXBusyLabel1.setBackground(java.awt.Color.white);
        jXBusyLabel1.setText("Bitte warten...");
        jXBusyLabel1.setOpaque(true);
        jXTaskPane1.getContentPane().add(jXBusyLabel1, java.awt.BorderLayout.PAGE_END);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jXTaskPane1, gridBagConstraints);

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private final String getLandparcelCode() {
        if (cidsBean != null) {
            final Object parcelCodeObj = cidsBean.getProperty("alkis_id");
            if (parcelCodeObj != null) {
                return parcelCodeObj.toString();
            }
        }
        return "";
    }

    private void hlKarteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hlKarteActionPerformed
        try {
            String parcelCode = getLandparcelCode();
            if (parcelCode.length() > 0) {
                String url = "http://s102x083:8080/ASWeb34/ASA_AAAWeb/ALKISLiegenschaftskarte?user=3atest&password=3atest&service=wuppertal&landparcel=" + parcelCode;
                ObjectRendererUIUtils.openURL(url);
            }
        } catch (Exception ex) {
            log.error(ex);
        }
    }//GEN-LAST:event_hlKarteActionPerformed

    private void hlFlurstuecksnachweisPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hlFlurstuecksnachweisPdfActionPerformed
        try {
            String parcelCode = getLandparcelCode();
            if (parcelCode.length() > 0) {
                String url = "http://s102x083:8080/ASWeb34/ASA_AAAWeb/ALKISBuchNachweis?user=3atest&password=3atest&service=wuppertal&product=LB.NRW.FENW.G&id=" + parcelCode + "&contentType=PDF&certificationType=9511";
                ObjectRendererUIUtils.openURL(url);
            }
        } catch (Exception ex) {
            log.error(ex);
        }
}//GEN-LAST:event_hlFlurstuecksnachweisPdfActionPerformed

    private void hlFlurstuecksEigentumsnachweisPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hlFlurstuecksEigentumsnachweisPdfActionPerformed
        try {
            String parcelCode = getLandparcelCode();
            if (parcelCode.length() > 0) {
                String url = "http://s102x083:8080/ASWeb34/ASA_AAAWeb/ALKISBuchNachweis?user=3atest&password=3atest&service=wuppertal&product=LB.A.FENW.G.NRW&id=" + parcelCode + "&contentType=PDF&certificationType=9551";
                ObjectRendererUIUtils.openURL(url);
            }
        } catch (Exception ex) {
            log.error(ex);
        }
}//GEN-LAST:event_hlFlurstuecksEigentumsnachweisPdfActionPerformed

    private void hlFlurstuecksEigentumsnachweisHtmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hlFlurstuecksEigentumsnachweisHtmlActionPerformed
        try {
            String parcelCode = getLandparcelCode();
            if (parcelCode.length() > 0) {
                String url = "http://s102x083:8080/ASWeb34/ASA_AAAWeb/ALKISBuchNachweis?user=3atest&password=3atest&service=wuppertal&product=LB.A.FENW.G.NRW&id=" + parcelCode + "&contentType=HTML&certificationType=9551";
                ObjectRendererUIUtils.openURL(url);
            }
        } catch (Exception ex) {
            log.error(ex);
        }
}//GEN-LAST:event_hlFlurstuecksEigentumsnachweisHtmlActionPerformed

    private void hlFlurstuecksnachweisHtmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hlFlurstuecksnachweisHtmlActionPerformed
        try {
            String parcelCode = getLandparcelCode();
            if (parcelCode.length() > 0) {
                String url = "http://s102x083:8080/ASWeb34/ASA_AAAWeb/ALKISBuchNachweis?user=3atest&password=3atest&service=wuppertal&product=LB.NRW.FENW.G&id=" + parcelCode + "&contentType=HTML&certificationType=9511";
                ObjectRendererUIUtils.openURL(url);
            }
        } catch (Exception ex) {
            log.error(ex);
        }
}//GEN-LAST:event_hlFlurstuecksnachweisHtmlActionPerformed

    private final String _prettyPrintLandparcelCode(String flurstueck, String flur, String gemarkung) {
        return _prettyPrintLandparcelCode(flurstueck, flur) + " - Gemarkung " + gemarkung;
    }

    private final String _prettyPrintLandparcelCode(String flurstueck, String flur) {
        return _prettyPrintLandparcelCode(flurstueck) + " - Flur " + removeLeadingZeros(flur);
    }

    private final String _prettyPrintLandparcelCode(String flurstueck) {
        return "Flurst端ck " + prettyPrintFlurstueck(flurstueck);
    }

    private final String prettyPrintFlurstueck(String fsZahlerNenner) {
        String[] tiles = fsZahlerNenner.split("/");
        if (tiles.length == 2) {
            return removeLeadingZeros(tiles[0]) + "/" + removeLeadingZeros(tiles[1]);
        } else if (tiles.length == 1) {
            return removeLeadingZeros(tiles[0]);
        }
        return fsZahlerNenner;
    }

    private final String removeLeadingZeros(String in) {
        return in.replaceAll("^0*", "");
    }

    private final String prettyPrintLandparcelCode(String fullLandparcelCode) {
        final String[] tiles = fullLandparcelCode.split("-");
        if (tiles.length == 1) {
            String flurstueck = tiles[0];
            return _prettyPrintLandparcelCode(flurstueck);
        } else if (tiles.length == 2) {
            String flurstueck = tiles[1];
            String flur = tiles[0];
            return _prettyPrintLandparcelCode(flurstueck, flur);
        } else if (tiles.length == 3) {
            String flurstueck = tiles[2];
            String flur = tiles[1];
            String gemarkung = tiles[0];
            return _prettyPrintLandparcelCode(flurstueck, flur, gemarkung);
        } else {
            return fullLandparcelCode;
        }
    }

    @Override
    public CidsBean getCidsBean() {
        return cidsBean;
    }

    @Override
    public void setCidsBean(CidsBean cb) {
        if (cb != null) {
            this.cidsBean = cb;
//            lblLandparcelCode.setText(String.valueOf(cidsBean.getProperty("alkis_id")));
//            lblTxtFlurstueckcode.setText(String.valueOf(cidsBean.getProperty("landparcels")));
            bindingGroup.unbind();
            bindingGroup.bind();
        }
    }

    @Override
    public String getTitle() {
        return title;
    }

    @Override
    public void setTitle(String title) {
        if (title == null) {
            title = "<Error>";
        } else {
            title = prettyPrintLandparcelCode(title);
        }
        this.title = title;
        lblTitle.setText(this.title);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXHyperlink hlFlurstuecksEigentumsnachweisHtml;
    private org.jdesktop.swingx.JXHyperlink hlFlurstuecksEigentumsnachweisPdf;
    private org.jdesktop.swingx.JXHyperlink hlFlurstuecksnachweisHtml;
    private org.jdesktop.swingx.JXHyperlink hlFlurstuecksnachweisPdf;
    private org.jdesktop.swingx.JXHyperlink hlKarte;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private org.jdesktop.swingx.JXBusyLabel jXBusyLabel1;
    private org.jdesktop.swingx.JXTaskPane jXTaskPane1;
    private javax.swing.JLabel lblLandparcelCode;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel panFooter;
    private javax.swing.JPanel panTitle;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    @Override
    public JComponent getTitleComponent() {
        return panTitle;
    }

    @Override
    public JComponent getFooterComponent() {
        return panFooter;
    }

    final class RetrieveWorker extends SwingWorker<LandParcel, Void> {

        public RetrieveWorker() {
            jLabel1.setVisible(false);
            jXBusyLabel1.setVisible(true);
            jXBusyLabel1.setBusy(true);
        }

        @Override
        protected LandParcel doInBackground() throws Exception {
            return infoService.getLandParcel(soapProvider.getIdentityCard(), soapProvider.getService(), getLandparcelCode(), false);
        }

        private final void restoreOnException() {
            for (JLabel label : retrieveableLabels) {
                label.setText("...");
            }
        }

        @Override
        protected void done() {
            try {
                final LandParcel retrievedLandparcel = get();
                if (retrievedLandparcel != null) {
                    Alkis_landparcelRenderer_old.this.landparcel = retrievedLandparcel;
                    jLabel1.setText(String.valueOf(retrievedLandparcel.getBuchungsstelle()));
                    jLabel1.setVisible(true);
//                    Alkis_buchungsblattRenderer.this.bindingGroup.unbind();
//                    Alkis_buchungsblattRenderer.this.bindingGroup.bind();

                    //TODO this is quick and dirty for tesing only!
//                    lblTxtEigentuemerNachname.setText(buchungsblatt.getOwners()[0].getSurName());

//                    lblTxtModellart.setText(point.getModellArt());
//                    lblTxtDienststelle.setText(point.getZustaendigeStelleStelle());
//                    lblTxtLand.setText(point.getZustaendigeStelleLand());
//                    lblTxtBeginn.setText(point.getLebenszeitIntervallBeginnt());
//                    lblTxtEnde.setText(point.getLebenszeitIntervallEndet());
//                    lblTxtAnlass.setText(point.getAnlass());
//                    lblTxtBemerkungAbmarkung.setText(point.getBemerkungZurAbmarkungName());
                }
            } catch (InterruptedException ex) {
                restoreOnException();
                log.warn(ex, ex);
            } catch (Exception ex) {
                //TODO show error message to user?
                restoreOnException();
                org.jdesktop.swingx.error.ErrorInfo ei = new ErrorInfo("Fehler beim Retrieve", ex.getMessage(), null, null, ex, Level.ALL, null);
                org.jdesktop.swingx.JXErrorPane.showDialog(StaticSwingTools.getParentFrame(Alkis_landparcelRenderer_old.this), ei);
                log.error(ex, ex);
            } finally {
                jXBusyLabel1.setVisible(false);
                jXBusyLabel1.setBusy(false);
            }
        }
    }
}
