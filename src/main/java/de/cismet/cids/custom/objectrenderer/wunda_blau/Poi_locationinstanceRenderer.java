/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/*
 * Poi_locationinstanceRenderer.java
 *
 * Created on 21.08.2009, 12:02:33
 */
package de.cismet.cids.custom.objectrenderer.wunda_blau;

import org.apache.log4j.Logger;

import java.awt.Cursor;

import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.border.Border;

import de.cismet.cids.custom.objectrenderer.converter.CollectionToStringConverter;
import de.cismet.cids.custom.objectrenderer.utils.ObjectRendererUtils;

import de.cismet.cids.dynamics.CidsBean;

import de.cismet.cids.tools.metaobjectrenderer.CidsBeanRenderer;

import de.cismet.tools.BrowserLauncher;

import de.cismet.tools.gui.BorderProvider;
import de.cismet.tools.gui.FooterComponentProvider;
import de.cismet.tools.gui.StaticSwingTools;
import de.cismet.tools.gui.TitleComponentProvider;

/**
 * DOCUMENT ME!
 *
 * @author   srichter
 * @version  $Revision$, $Date$
 */
public class Poi_locationinstanceRenderer extends javax.swing.JPanel implements CidsBeanRenderer,
    TitleComponentProvider,
    FooterComponentProvider,
    BorderProvider {

    //~ Instance fields --------------------------------------------------------

    private final Logger log = Logger.getLogger(this.getClass());
    private CidsBean cidsBean;
    private String title;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXHyperlink jXHyperlinkImage;
    private org.jdesktop.swingx.JXHyperlink jXHyperlinkWebsite;
    private javax.swing.JLabel lblAdresse;
    private javax.swing.JLabel lblAdresseDesc;
    private javax.swing.JLabel lblAlternativ;
    private javax.swing.JLabel lblAlternativnamenDesc;
    private javax.swing.JLabel lblAuthor;
    private javax.swing.JLabel lblFax;
    private javax.swing.JLabel lblFaxDesc;
    private javax.swing.JLabel lblHaupttyp;
    private javax.swing.JLabel lblHaupttypDesc;
    private javax.swing.JLabel lblInfo;
    private javax.swing.JLabel lblInfoDesc;
    private javax.swing.JLabel lblMail;
    private javax.swing.JLabel lblSignatur;
    private javax.swing.JLabel lblSignatur1;
    private javax.swing.JLabel lblSignatur2;
    private javax.swing.JLabel lblSignatur3;
    private javax.swing.JLabel lblSignaturIcon;
    private javax.swing.JLabel lblSonst;
    private javax.swing.JLabel lblSonst1;
    private javax.swing.JLabel lblSonstigeTypenDesc;
    private javax.swing.JLabel lblTel;
    private javax.swing.JLabel lblTelefonDesc;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUrl;
    private javax.swing.JPanel panContent;
    private javax.swing.JPanel panFooter;
    private javax.swing.JPanel panSpacing1;
    private javax.swing.JPanel panSpacing2;
    private javax.swing.JPanel panTitle;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form Poi_locationinstanceRenderer.
     */
    public Poi_locationinstanceRenderer() {
        initComponents();
        ObjectRendererUtils.decorateComponentWithMouseOverCursorChange(
            lblMail,
            Cursor.HAND_CURSOR,
            Cursor.DEFAULT_CURSOR);
        ObjectRendererUtils.decorateComponentWithMouseOverCursorChange(
            lblUrl,
            Cursor.HAND_CURSOR,
            Cursor.DEFAULT_CURSOR);
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        panTitle = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        panFooter = new javax.swing.JPanel();
        panSpacing1 = new javax.swing.JPanel();
        lblMail = new javax.swing.JLabel();
        lblUrl = new javax.swing.JLabel();
        panSpacing2 = new javax.swing.JPanel();
        panContent = new javax.swing.JPanel();
        lblAdresseDesc = new javax.swing.JLabel();
        lblTelefonDesc = new javax.swing.JLabel();
        lblFaxDesc = new javax.swing.JLabel();
        lblInfoDesc = new javax.swing.JLabel();
        lblAlternativnamenDesc = new javax.swing.JLabel();
        lblHaupttypDesc = new javax.swing.JLabel();
        lblSonstigeTypenDesc = new javax.swing.JLabel();
        lblAdresse = new javax.swing.JLabel();
        lblTel = new javax.swing.JLabel();
        lblFax = new javax.swing.JLabel();
        lblInfo = new javax.swing.JLabel();
        lblAlternativ = new javax.swing.JLabel();
        lblHaupttyp = new javax.swing.JLabel();
        lblSonst = new javax.swing.JLabel();
        lblSignatur = new javax.swing.JLabel();
        lblSignaturIcon = new javax.swing.JLabel();
        jXHyperlinkWebsite = new org.jdesktop.swingx.JXHyperlink();
        jXHyperlinkImage = new org.jdesktop.swingx.JXHyperlink();
        lblSignatur1 = new javax.swing.JLabel();
        lblSignatur2 = new javax.swing.JLabel();
        lblSignatur3 = new javax.swing.JLabel();
        lblSonst1 = new javax.swing.JLabel();
        lblAuthor = new javax.swing.JLabel();

        panTitle.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        panTitle.setOpaque(false);
        panTitle.setLayout(new java.awt.GridBagLayout());

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setText("TITLE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        panTitle.add(lblTitle, gridBagConstraints);

        panFooter.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 15, 10));
        panFooter.setMinimumSize(new java.awt.Dimension(404, 0));
        panFooter.setOpaque(false);
        panFooter.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 5));

        panSpacing1.setMaximumSize(new java.awt.Dimension(22, 22));
        panSpacing1.setMinimumSize(new java.awt.Dimension(22, 22));
        panSpacing1.setOpaque(false);
        panSpacing1.setPreferredSize(new java.awt.Dimension(22, 22));
        panFooter.add(panSpacing1);

        lblMail.setForeground(new java.awt.Color(51, 153, 255));
        lblMail.setIcon(new javax.swing.ImageIcon(
                getClass().getResource("/de/cismet/cids/custom/wunda_blau/res/mail_new.png"))); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.email}"),
                lblMail,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("-");
        binding.setSourceUnreadableValue("<Error>");
        bindingGroup.addBinding(binding);

        lblMail.addMouseListener(new java.awt.event.MouseAdapter() {

                @Override
                public void mouseClicked(final java.awt.event.MouseEvent evt) {
                    lblMailMouseClicked(evt);
                }
            });
        panFooter.add(lblMail);

        lblUrl.setForeground(new java.awt.Color(51, 153, 255));
        lblUrl.setIcon(new javax.swing.ImageIcon(
                getClass().getResource("/de/cismet/cids/custom/wunda_blau/res/html.png"))); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.url}"),
                lblUrl,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("-");
        binding.setSourceUnreadableValue("<Error>");
        bindingGroup.addBinding(binding);

        lblUrl.addMouseListener(new java.awt.event.MouseAdapter() {

                @Override
                public void mouseClicked(final java.awt.event.MouseEvent evt) {
                    lblUrlMouseClicked(evt);
                }
            });
        panFooter.add(lblUrl);

        panSpacing2.setMaximumSize(new java.awt.Dimension(22, 22));
        panSpacing2.setMinimumSize(new java.awt.Dimension(22, 22));
        panSpacing2.setOpaque(false);
        panSpacing2.setPreferredSize(new java.awt.Dimension(22, 22));
        panFooter.add(panSpacing2);

        setOpaque(false);
        setLayout(new java.awt.BorderLayout());

        panContent.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 15, 5, 20));
        panContent.setMinimumSize(new java.awt.Dimension(513, 100));
        panContent.setOpaque(false);
        panContent.setLayout(new java.awt.GridBagLayout());

        lblAdresseDesc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblAdresseDesc.setText("Adresse:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 30);
        panContent.add(lblAdresseDesc, gridBagConstraints);

        lblTelefonDesc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblTelefonDesc.setText("Telefon:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 30);
        panContent.add(lblTelefonDesc, gridBagConstraints);

        lblFaxDesc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblFaxDesc.setText("Fax:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 30);
        panContent.add(lblFaxDesc, gridBagConstraints);

        lblInfoDesc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.info_art.name}:"),
                lblInfoDesc,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("Info:");
        binding.setSourceUnreadableValue("Info:");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 30);
        panContent.add(lblInfoDesc, gridBagConstraints);

        lblAlternativnamenDesc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblAlternativnamenDesc.setText("Zusätzliche Namen:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 30);
        panContent.add(lblAlternativnamenDesc, gridBagConstraints);

        lblHaupttypDesc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblHaupttypDesc.setText("Hauptthema:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 30);
        panContent.add(lblHaupttypDesc, gridBagConstraints);

        lblSonstigeTypenDesc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblSonstigeTypenDesc.setText("Themen:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 30);
        panContent.add(lblSonstigeTypenDesc, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.strasse}"),
                lblAdresse,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panContent.add(lblAdresse, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.telefon}"),
                lblTel,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("-");
        binding.setSourceUnreadableValue("<Error>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panContent.add(lblTel, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.fax}"),
                lblFax,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("-");
        binding.setSourceUnreadableValue("<Error>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panContent.add(lblFax, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.info}"),
                lblInfo,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("-");
        binding.setSourceUnreadableValue("<Error>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panContent.add(lblInfo, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.alternativegeographicidentifier}"),
                lblAlternativ,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("-");
        binding.setSourceUnreadableValue("<Error>");
        binding.setConverter(new CollectionToStringConverter(
                "alternativegeographicidentifier",
                "<br>",
                "<html>",
                "</html>"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panContent.add(lblAlternativ, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.mainlocationtype.identification}"),
                lblHaupttyp,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("-");
        binding.setSourceUnreadableValue("<Error>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panContent.add(lblHaupttyp, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.locationtypes}"),
                lblSonst,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("-");
        binding.setSourceUnreadableValue("<Error>");
        binding.setConverter(new CollectionToStringConverter("identification", "<br>", "<html>", "</html>"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panContent.add(lblSonst, gridBagConstraints);

        lblSignatur.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblSignatur.setText("Signatur:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 30);
        panContent.add(lblSignatur, gridBagConstraints);

        lblSignaturIcon.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblSignaturIcon.setText("---");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 30);
        panContent.add(lblSignaturIcon, gridBagConstraints);

        jXHyperlinkWebsite.setText("-");
        jXHyperlinkWebsite.addActionListener(new java.awt.event.ActionListener() {

                @Override
                public void actionPerformed(final java.awt.event.ActionEvent evt) {
                    jXHyperlinkWebsiteActionPerformed(evt);
                }
            });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panContent.add(jXHyperlinkWebsite, gridBagConstraints);

        jXHyperlinkImage.setText("-");
        jXHyperlinkImage.addActionListener(new java.awt.event.ActionListener() {

                @Override
                public void actionPerformed(final java.awt.event.ActionEvent evt) {
                    jXHyperlinkImageActionPerformed(evt);
                }
            });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panContent.add(jXHyperlinkImage, gridBagConstraints);

        lblSignatur1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblSignatur1.setText("Bild URL:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 30);
        panContent.add(lblSignatur1, gridBagConstraints);

        lblSignatur2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblSignatur2.setText("Webseite des Bildes:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 30);
        panContent.add(lblSignatur2, gridBagConstraints);

        lblSignatur3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblSignatur3.setText("Urheber:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 30);
        panContent.add(lblSignatur3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panContent.add(lblSonst1, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.urheber_foto}"),
                lblAuthor,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panContent.add(lblAuthor, gridBagConstraints);

        add(panContent, java.awt.BorderLayout.CENTER);

        bindingGroup.bind();
    } // </editor-fold>//GEN-END:initComponents

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void lblMailMouseClicked(final java.awt.event.MouseEvent evt) { //GEN-FIRST:event_lblMailMouseClicked
        final String email = lblMail.getText();
        if (email.length() > 3) {
            try {
                BrowserLauncher.openURL("mailto:" + email);
            } catch (Exception ex) {
                log.error("Fehler beim \u00D6ffnen der URL: \"mailto:" + email + "\"", ex);
            }
        }
    }                                                                       //GEN-LAST:event_lblMailMouseClicked

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void lblUrlMouseClicked(final java.awt.event.MouseEvent evt) { //GEN-FIRST:event_lblUrlMouseClicked
        final String url = lblUrl.getText();
        if (url.length() > 3) {
            try {
                BrowserLauncher.openURL(url);
            } catch (Exception ex) {
                log.error("Fehler beim \u00D6ffnen der URL: " + url + "", ex);
            }
        }
    }                                                                      //GEN-LAST:event_lblUrlMouseClicked

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void jXHyperlinkWebsiteActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_jXHyperlinkWebsiteActionPerformed
        final String site = (String)cidsBean.getProperty("fotostrecke");
        if (site != null) {
            try {
                BrowserLauncher.openURL(site);
            } catch (Exception ex) {
                final String message = "Fehler beim Öffnen der Fotostrecke.";
                log.error(message, ex);
                JOptionPane.showMessageDialog(StaticSwingTools.getParentFrame(this),
                    message,
                    "Fehler",
                    JOptionPane.ERROR_MESSAGE);
            }
        }
    }                                                                                      //GEN-LAST:event_jXHyperlinkWebsiteActionPerformed

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void jXHyperlinkImageActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_jXHyperlinkImageActionPerformed
        final String foto = (String)cidsBean.getProperty("foto");
        if (foto != null) {
            try {
                BrowserLauncher.openURL(foto);
            } catch (Exception ex) {
                final String message = "Fehler beim Öffnen des Fotos.";
                log.error(message, ex);
                JOptionPane.showMessageDialog(StaticSwingTools.getParentFrame(this),
                    message,
                    "Fehler",
                    JOptionPane.ERROR_MESSAGE);
            }
        }
    }                                                                                    //GEN-LAST:event_jXHyperlinkImageActionPerformed

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    @Override
    public CidsBean getCidsBean() {
        return cidsBean;
    }

    /**
     * DOCUMENT ME!
     *
     * @param   property   DOCUMENT ME!
     * @param   maxLength  DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    String getStartOfProperty(final String property, final int maxLength) {
        try {
            final String s = (String)cidsBean.getProperty(property);
            if (s.length() > maxLength) {
                return s.substring(0, maxLength) + "...";
            } else {
                return s;
            }
        } catch (Exception e) {
            return "-";
        }
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    String getImageUrlStart() {
        return getStartOfProperty("foto", 120);
    }
    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    String getSiteUrlStart() {
        return getStartOfProperty("fotostrecke", 120);
    }

    /**
     * DOCUMENT ME!
     *
     * @param  cidsBean  DOCUMENT ME!
     */
    @Override
    public void setCidsBean(final CidsBean cidsBean) {
        bindingGroup.unbind();
        if (cidsBean != null) {
            this.cidsBean = cidsBean;
            bindingGroup.bind();

            if (lblMail.getText().length() < 3) {
                lblMail.setVisible(false);
            }
            if (lblUrl.getText().length() < 3) {
                lblUrl.setVisible(false);
            }
            final Icon sig = PoiTools.getPoiSignatureIcon(cidsBean);
            if (sig != null) {
                lblSignaturIcon.setIcon(sig);
                lblSignaturIcon.setText("");
            }

            jXHyperlinkImage.setText(getImageUrlStart());
            jXHyperlinkWebsite.setText(getSiteUrlStart());
        }
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    @Override
    public String getTitle() {
        return title;
    }

    /**
     * DOCUMENT ME!
     *
     * @param  title  DOCUMENT ME!
     */
    @Override
    public void setTitle(String title) {
        if (title == null) {
            title = "<Error>";
        }
        this.title = title;
        lblTitle.setText(this.title);
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    @Override
    public JComponent getTitleComponent() {
        return panTitle;
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    @Override
    public JComponent getFooterComponent() {
        return panFooter;
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    @Override
    public Border getTitleBorder() {
        return BorderFactory.createEmptyBorder();
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    @Override
    public Border getFooterBorder() {
        return BorderFactory.createEmptyBorder();
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    @Override
    public Border getCenterrBorder() {
        return BorderFactory.createEmptyBorder();
    }

    /**
     * DOCUMENT ME!
     */
    @Override
    public void dispose() {
        bindingGroup.unbind();
    }
}
