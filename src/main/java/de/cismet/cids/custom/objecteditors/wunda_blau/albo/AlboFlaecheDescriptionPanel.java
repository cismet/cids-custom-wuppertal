/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.cismet.cids.custom.objecteditors.wunda_blau.albo;

import org.jdesktop.beansbinding.BindingGroup;

import java.awt.CardLayout;

import javax.swing.JPanel;

import de.cismet.cids.editors.DefaultBindableScrollableComboBox;

import de.cismet.connectioncontext.ConnectionContext;

/**
 * DOCUMENT ME!
 *
 * @author   jruiz
 * @version  $Revision$, $Date$
 */
public class AlboFlaecheDescriptionPanel extends AbstractAlboFlaechePanel {

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jLabel36 = new javax.swing.JLabel();
        cbFlaechentyp = new DefaultBindableScrollableComboBox();
        jLabel13 = new javax.swing.JLabel();
        cbFlaechenart = new DefaultBindableScrollableComboBox();
        jLabel12 = new javax.swing.JLabel();
        jPanel54 = new javax.swing.JPanel();
        txtJahrVon = new javax.swing.JFormattedTextField();
        filler68 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0),
                new java.awt.Dimension(0, 0),
                new java.awt.Dimension(32767, 0));
        jLabel74 = new javax.swing.JLabel();
        txtJahrBis = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        cbFlaechenstatus = new DefaultBindableScrollableComboBox();
        jLabel15 = new javax.swing.JLabel();
        cbFlaechenzuordnung = new DefaultBindableScrollableComboBox();
        jLabel4 = new javax.swing.JLabel();
        txtAlteNummer = new javax.swing.JTextField();
        filler9 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0),
                new java.awt.Dimension(0, 0),
                new java.awt.Dimension(0, 32767));
        filler8 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0),
                new java.awt.Dimension(0, 0),
                new java.awt.Dimension(32767, 0));

        final FormListener formListener = new FormListener();

        setName("Form"); // NOI18N
        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(jLabel36, "Gesamt-/Teilfläche:");
        jLabel36.setName("jLabel36"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(jLabel36, gridBagConstraints);

        cbFlaechentyp.setName("cbFlaechentyp"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.fk_flaechentyp}"),
                cbFlaechentyp,
                org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(cbFlaechentyp, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel13, "Art der Fläche:");
        jLabel13.setName("jLabel13"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(jLabel13, gridBagConstraints);

        cbFlaechenart.setName("cbFlaechenart"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.fk_flaechenart}"),
                cbFlaechenart,
                org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        cbFlaechenart.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(cbFlaechenart, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(
            jLabel12,
            org.openide.util.NbBundle.getMessage(
                AlboFlaecheDescriptionPanel.class,
                "AlboFlaecheInfoPanel.jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12");                   // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(jLabel12, gridBagConstraints);

        jPanel54.setName("jPanel54"); // NOI18N
        jPanel54.setOpaque(false);
        jPanel54.setLayout(new java.awt.GridBagLayout());

        txtJahrVon.setText(org.openide.util.NbBundle.getMessage(
                AlboFlaecheDescriptionPanel.class,
                "AlboFlaecheInfoPanel.jFormattedTextField17.text")); // NOI18N
        txtJahrVon.setName("txtJahrVon");                            // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.jahr_von}"),
                txtJahrVon,
                org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel54.add(txtJahrVon, gridBagConstraints);

        filler68.setName("filler68"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 20;
        jPanel54.add(filler68, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(
            jLabel74,
            org.openide.util.NbBundle.getMessage(
                AlboFlaecheDescriptionPanel.class,
                "AlboFlaecheInfoPanel.jLabel51.text")); // NOI18N
        jLabel74.setName("jLabel74");                   // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel54.add(jLabel74, gridBagConstraints);

        txtJahrBis.setText(org.openide.util.NbBundle.getMessage(
                AlboFlaecheDescriptionPanel.class,
                "AlboFlaecheInfoPanel.jFormattedTextField18.text")); // NOI18N
        txtJahrBis.setName("txtJahrBis");                            // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.jahr_bisn}"),
                txtJahrBis,
                org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel54.add(txtJahrBis, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        add(jPanel54, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(
            jLabel14,
            org.openide.util.NbBundle.getMessage(
                AlboFlaecheDescriptionPanel.class,
                "AlboFlaecheInfoPanel.jLabel14.text")); // NOI18N
        jLabel14.setName("jLabel14");                   // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(jLabel14, gridBagConstraints);

        cbFlaechenstatus.setName("cbFlaechenstatus"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.fk_flaechenstatus}"),
                cbFlaechenstatus,
                org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(cbFlaechenstatus, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(
            jLabel15,
            org.openide.util.NbBundle.getMessage(
                AlboFlaecheDescriptionPanel.class,
                "AlboFlaecheInfoPanel.jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15");                   // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(jLabel15, gridBagConstraints);

        cbFlaechenzuordnung.setName("cbFlaechenzuordnung"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.fk_flaechenzuordnung}"),
                cbFlaechenzuordnung,
                org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(cbFlaechenzuordnung, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(
            jLabel4,
            org.openide.util.NbBundle.getMessage(
                AlboFlaecheDescriptionPanel.class,
                "AlboFlaecheInfoPanel.jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4");                    // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(jLabel4, gridBagConstraints);

        txtAlteNummer.setName("txtAlteNummer"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.alte_nummer}"),
                txtAlteNummer,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(txtAlteNummer, gridBagConstraints);

        filler9.setName("filler9"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(filler9, gridBagConstraints);

        filler8.setName("filler8"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 250;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(filler8, gridBagConstraints);

        bindingGroup.bind();
    }

    /**
     * Code for dispatching events from components to event handlers.
     *
     * @version  $Revision$, $Date$
     */
    private class FormListener implements java.awt.event.ActionListener {

        /**
         * Creates a new FormListener object.
         */
        FormListener() {
        }

        @Override
        public void actionPerformed(final java.awt.event.ActionEvent evt) {
            if (evt.getSource() == cbFlaechenart) {
                AlboFlaecheDescriptionPanel.this.cbFlaechenartActionPerformed(evt);
            }
        }
    } // </editor-fold>//GEN-END:initComponents

    //~ Instance fields --------------------------------------------------------

    private JPanel panSpezifisch;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbFlaechenart;
    private javax.swing.JComboBox<String> cbFlaechenstatus;
    private javax.swing.JComboBox<String> cbFlaechentyp;
    private javax.swing.JComboBox<String> cbFlaechenzuordnung;
    private javax.swing.Box.Filler filler68;
    private javax.swing.Box.Filler filler8;
    private javax.swing.Box.Filler filler9;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JPanel jPanel54;
    private javax.swing.JTextField txtAlteNummer;
    private javax.swing.JFormattedTextField txtJahrBis;
    private javax.swing.JFormattedTextField txtJahrVon;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form AlboFlaecheDescriptionPanel.
     */
    public AlboFlaecheDescriptionPanel() {
        initComponents();
    }

    /**
     * Creates a new AlboFlaecheDescriptionPanel object.
     *
     * @param  editable  DOCUMENT ME!
     */
    public AlboFlaecheDescriptionPanel(final boolean editable) {
        super(editable);
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @param  panSpezifisch  DOCUMENT ME!
     */
    public void setPanSpezifisch(final JPanel panSpezifisch) {
        this.panSpezifisch = panSpezifisch;
    }

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void cbFlaechenartActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_cbFlaechenartActionPerformed
        final String selected = (String)cbFlaechenart.getSelectedItem();

        if (null != selected) {
            switch (selected) {
                case "Altstandort": {
                    ((CardLayout)panSpezifisch.getLayout()).show(panSpezifisch, "standort");
                    break;
                }
                case "Altablagerung": {
                    ((CardLayout)panSpezifisch.getLayout()).show(panSpezifisch, "altablagerung");
                    break;
                }
                case "Betriebsstandort": {
                    ((CardLayout)panSpezifisch.getLayout()).show(panSpezifisch, "standort");
                    break;
                }
                case "Schadensfall": {
                    ((CardLayout)panSpezifisch.getLayout()).show(panSpezifisch, "schadensfall");
                    break;
                }
                case "Immisions- / Überschwemmungsfälle": {
                    ((CardLayout)panSpezifisch.getLayout()).show(panSpezifisch, "immissions");
                    break;
                }
                case "Unsachgemäße Materialaufbringung": {
                    ((CardLayout)panSpezifisch.getLayout()).show(panSpezifisch, "materialaufbringung");
                    break;
                }
                case "Bewirtschaftungsschaden": {
                    ((CardLayout)panSpezifisch.getLayout()).show(panSpezifisch, "bewirtschaftungsschaden");
                    break;
                }
                case "Untersuchung ohne Verdacht": {
                    ((CardLayout)panSpezifisch.getLayout()).show(panSpezifisch, "ohneVerdacht");
                    break;
                }
                default: {
                    break;
                }
            }
        }
    } //GEN-LAST:event_cbFlaechenartActionPerformed

    @Override
    public void initWithConnectionContext(final ConnectionContext connectionContext) {
        super.initWithConnectionContext(connectionContext);
        initComponents();
    }

    @Override
    protected BindingGroup getBindingGroup() {
        return bindingGroup;
    }
}
