/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LocationinstanceEditor.java
 *
 * Created on 17.08.2009, 15:40:29
 */
package de.cismet.cids.custom.objecteditors.wunda_blau;

import Sirius.server.middleware.types.MetaObject;
import de.cismet.cids.custom.objectrenderer.utils.ObjectRendererUIUtils;
import de.cismet.cids.custom.wunda_blau.res.StaticProperties;
import de.cismet.cids.dynamics.CidsBean;
import de.cismet.cids.editors.DefaultCustomObjectEditor;
import de.cismet.cids.editors.FastBindableReferenceCombo;
import de.cismet.cids.tools.metaobjectrenderer.Titled;
import java.net.URL;
import java.util.Arrays;
import java.util.Collection;
import java.util.logging.Level;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.jdesktop.swingx.JXErrorPane;
import org.jdesktop.swingx.error.ErrorInfo;

/**
 *
 * @author srichter
 */
public class Poi_locationtypeEditor extends DefaultCustomObjectEditor implements Titled {

    private final org.apache.log4j.Logger log = org.apache.log4j.Logger.getLogger(this.getClass());
    private String latestIconUrl = null;
    private String title = "";

    /** Creates new form LocationinstanceEditor */
    public Poi_locationtypeEditor() {
        initComponents();
        dlgAddLocationType.pack();
    }

    @Override
    public synchronized void setCidsBean(CidsBean cidsBean) {
        super.setCidsBean(cidsBean);
        txtIconFocusLost(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        dlgAddLocationType = new javax.swing.JDialog();
        panNewSuchwort = new javax.swing.JPanel();
        lblAuswaehlen = new javax.swing.JLabel();
        final MetaObject[] lebenslagen = ObjectRendererUIUtils.getLightweightMetaObjectsForTable("poi_spatialreferencesystemusinggeographicidentifiers", new String[]{"theme"});
        if(lebenslagen != null) {
            Arrays.sort(lebenslagen);
            cbTypes = new javax.swing.JComboBox(lebenslagen);
            panMenButtons = new javax.swing.JPanel();
            btnMenAbort = new javax.swing.JButton();
            btnMenOk = new javax.swing.JButton();
            lblName = new javax.swing.JLabel();
            lblDefinition = new javax.swing.JLabel();
            lblToPublish = new javax.swing.JLabel();
            chkToPublish = new javax.swing.JCheckBox();
            txtName = new javax.swing.JTextField();
            txtDefinition = new javax.swing.JTextField();
            scpLocationtypeList = new javax.swing.JScrollPane();
            lstLocationTypes = new javax.swing.JList();
            panButtons = new javax.swing.JPanel();
            btnAdd = new javax.swing.JButton();
            btnRemove = new javax.swing.JButton();
            lblLocationTypes = new javax.swing.JLabel();
            jLabel1 = new javax.swing.JLabel();
            cbSignatur = new FastBindableReferenceCombo("%1$2s", new String[]{"definition"});
            lblIcon = new javax.swing.JLabel();
            txtIcon = new javax.swing.JTextField();
            lblIconImg = new javax.swing.JLabel();

            dlgAddLocationType.setModal(true);

            panNewSuchwort.setMaximumSize(new java.awt.Dimension(180, 120));
            panNewSuchwort.setMinimumSize(new java.awt.Dimension(180, 120));
            panNewSuchwort.setPreferredSize(new java.awt.Dimension(180, 120));
            panNewSuchwort.setLayout(new java.awt.GridBagLayout());

            lblAuswaehlen.setText("Bitte Lebenslage auswählen:");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            panNewSuchwort.add(lblAuswaehlen, gridBagConstraints);

        }
        cbTypes.setMaximumSize(new java.awt.Dimension(100, 20));
        cbTypes.setMinimumSize(new java.awt.Dimension(100, 20));
        cbTypes.setPreferredSize(new java.awt.Dimension(100, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panNewSuchwort.add(cbTypes, gridBagConstraints);

        panMenButtons.setLayout(new java.awt.GridBagLayout());

        btnMenAbort.setText("Abbrechen");
        btnMenAbort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenAbortActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panMenButtons.add(btnMenAbort, gridBagConstraints);

        btnMenOk.setText("Ok");
        btnMenOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenOkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panMenButtons.add(btnMenOk, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panNewSuchwort.add(panMenButtons, gridBagConstraints);

        dlgAddLocationType.getContentPane().add(panNewSuchwort, java.awt.BorderLayout.CENTER);

        setLayout(new java.awt.GridBagLayout());

        lblName.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblName.setText("Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblName, gridBagConstraints);

        lblDefinition.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblDefinition.setText("Definition:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblDefinition, gridBagConstraints);

        lblToPublish.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblToPublish.setText("Veröffentlicht:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblToPublish, gridBagConstraints);

        chkToPublish.setOpaque(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.to_publish}"), chkToPublish, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        binding.setSourceNullValue(false);
        binding.setSourceUnreadableValue(false);
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 3, 5, 5);
        add(chkToPublish, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.identification}"), txtName, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("");
        binding.setSourceUnreadableValue("<Error>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtName, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.definition}"), txtDefinition, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("");
        binding.setSourceUnreadableValue("<Error>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtDefinition, gridBagConstraints);

        lstLocationTypes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${cidsBean.locationtypes}");
        org.jdesktop.swingbinding.JListBinding jListBinding = org.jdesktop.swingbinding.SwingBindings.createJListBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, lstLocationTypes);
        bindingGroup.addBinding(jListBinding);

        scpLocationtypeList.setViewportView(lstLocationTypes);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(scpLocationtypeList, gridBagConstraints);

        panButtons.setOpaque(false);
        panButtons.setLayout(new java.awt.GridBagLayout());

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/cismet/cids/custom/objecteditors/wunda_blau/edit_add_mini.png"))); // NOI18N
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panButtons.add(btnAdd, gridBagConstraints);

        btnRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/cismet/cids/custom/objecteditors/wunda_blau/edit_remove_mini.png"))); // NOI18N
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panButtons.add(btnRemove, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(panButtons, gridBagConstraints);

        lblLocationTypes.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblLocationTypes.setText("Lebenslagen:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 5, 5, 5);
        add(lblLocationTypes, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setText("Signatur:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel1, gridBagConstraints);

        ((FastBindableReferenceCombo)cbSignatur).setSorted(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.signatur}"), cbSignatur, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        binding.setSourceNullValue("-");
        binding.setSourceUnreadableValue("<Error>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 5, 4, 4);
        add(cbSignatur, gridBagConstraints);

        lblIcon.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblIcon.setText("Symbol:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblIcon, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${cidsBean.icon}"), txtIcon, org.jdesktop.beansbinding.BeanProperty.create("text_ON_ACTION_OR_FOCUS_LOST"));
        binding.setSourceNullValue("");
        binding.setSourceUnreadableValue("<Error>");
        bindingGroup.addBinding(binding);

        txtIcon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIconActionPerformed(evt);
            }
        });
        txtIcon.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIconFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtIcon, gridBagConstraints);

        lblIconImg.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder("Vorschau"), javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5)));
        lblIconImg.setMaximumSize(new java.awt.Dimension(84, 84));
        lblIconImg.setMinimumSize(new java.awt.Dimension(84, 84));
        lblIconImg.setPreferredSize(new java.awt.Dimension(84, 84));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblIconImg, gridBagConstraints);

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        dlgAddLocationType.setLocationRelativeTo(Poi_locationtypeEditor.this);
        dlgAddLocationType.setVisible(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        final Object selection = lstLocationTypes.getSelectedValue();
        if (selection != null) {
            final int answer = JOptionPane.showConfirmDialog(this, "Soll die Lebenslage wirklich gelöscht werden?", "Lebenslage entfernen", JOptionPane.YES_NO_OPTION);
            if (answer == JOptionPane.YES_OPTION) {
                try {
                    final CidsBean type = (CidsBean) selection;
                    final Object typesCollection = cidsBean.getProperty("locationtypes");
                    if (typesCollection instanceof Collection) {
                        ((Collection) typesCollection).remove(type);
                    }
                } catch (Exception ex) {
                    final ErrorInfo ei = new ErrorInfo("Fehler beim Löschen", "Beim Löschen der Lebenslage ist ein Fehler aufgetreten", null,
                            null, ex, Level.SEVERE, null);
                    JXErrorPane.showDialog(this, ei);
                }
            }
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnMenAbortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenAbortActionPerformed
        dlgAddLocationType.setVisible(false);
}//GEN-LAST:event_btnMenAbortActionPerformed

    private void btnMenOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenOkActionPerformed
        try {
            final Object selItem = cbTypes.getSelectedItem();
            if (selItem instanceof MetaObject) {
                addLebenslageBeanToLebenslagen(((MetaObject) selItem).getBean());
            }
        } catch (Exception ex) {
            log.error(ex, ex);
        } finally {
            dlgAddLocationType.setVisible(false);
        }
}//GEN-LAST:event_btnMenOkActionPerformed

    private void txtIconFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIconFocusLost
        final String iconUrlString = StaticProperties.POI_LOCATIONTYPE_URL_PREFIX + txtIcon.getText() + StaticProperties.POI_LOCATIONTYPE_URL_SUFFIX;
        if (latestIconUrl == null || !latestIconUrl.equals(iconUrlString)) {
            latestIconUrl = iconUrlString;
            final URL iconUrl = Poi_locationtypeEditor.class.getResource(iconUrlString);
            if (iconUrl != null) {
                final ImageIcon ic = new ImageIcon(iconUrl);
                lblIconImg.setIcon(ic);
                lblIconImg.setText("");
            } else {
                lblIconImg.setIcon(null);
                lblIconImg.setText("<Kein Icon>");
                log.warn("Can not find icon " + iconUrlString + " !");
            }
        }
    }//GEN-LAST:event_txtIconFocusLost

    private void txtIconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIconActionPerformed
        txtIconFocusLost(null);
    }//GEN-LAST:event_txtIconActionPerformed

    private final void addLebenslageBeanToLebenslagen(final CidsBean newTypeBean) {
        if (newTypeBean != null) {
            final Object o = cidsBean.getProperty("locationtypes");
            if (o instanceof Collection) {
                try {
                    final Collection<CidsBean> col = (Collection) o;
                    for (final CidsBean bean : col) {
                        if (newTypeBean.equals(bean)) {
                            log.info("Locationtype " + newTypeBean.getProperty("theme") + " already present!");
                            return;
                        }
                    }
                    col.add(newTypeBean);
                } catch (Exception ex) {
                    log.error(ex, ex);
                }
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnMenAbort;
    private javax.swing.JButton btnMenOk;
    private javax.swing.JButton btnRemove;
    private javax.swing.JComboBox cbSignatur;
    private javax.swing.JComboBox cbTypes;
    private javax.swing.JCheckBox chkToPublish;
    private javax.swing.JDialog dlgAddLocationType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAuswaehlen;
    private javax.swing.JLabel lblDefinition;
    private javax.swing.JLabel lblIcon;
    private javax.swing.JLabel lblIconImg;
    private javax.swing.JLabel lblLocationTypes;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblToPublish;
    private javax.swing.JList lstLocationTypes;
    private javax.swing.JPanel panButtons;
    private javax.swing.JPanel panMenButtons;
    private javax.swing.JPanel panNewSuchwort;
    private javax.swing.JScrollPane scpLocationtypeList;
    private javax.swing.JTextField txtDefinition;
    private javax.swing.JTextField txtIcon;
    private javax.swing.JTextField txtName;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    @Override
    public String getTitle() {
        return title;
    }

    @Override
    public void setTitle(String title) {
        this.title = title;
    }
}
