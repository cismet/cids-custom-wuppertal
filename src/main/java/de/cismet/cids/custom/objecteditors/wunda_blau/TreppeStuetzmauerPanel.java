/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.cismet.cids.custom.objecteditors.wunda_blau;

import Sirius.navigator.connection.SessionManager;
import Sirius.navigator.ui.ComponentRegistry;

import Sirius.server.middleware.types.MetaClass;
import Sirius.server.middleware.types.MetaObject;
import Sirius.server.middleware.types.MetaObjectNode;

import org.apache.log4j.Logger;

import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingx.JXHyperlink;

import org.openide.awt.Mnemonics;
import org.openide.util.NbBundle;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.Box;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSeparator;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.SwingWorker;

import de.cismet.cids.custom.objecteditors.utils.RendererTools;
import de.cismet.cids.custom.objectrenderer.utils.ObjectRendererUtils;
import de.cismet.cids.custom.wunda_blau.band.SideComboBox;

import de.cismet.cids.dynamics.CidsBean;
import de.cismet.cids.dynamics.CidsBeanStore;
import de.cismet.cids.dynamics.Disposable;

import de.cismet.connectioncontext.ConnectionContext;
import de.cismet.connectioncontext.ConnectionContextStore;

import de.cismet.tools.gui.RoundedPanel;
import de.cismet.tools.gui.SemiRoundedPanel;

/**
 * DOCUMENT ME!
 *
 * @author   jruiz
 * @version  $Revision$, $Date$
 */
public class TreppeStuetzmauerPanel extends javax.swing.JPanel implements CidsBeanStore,
    Disposable,
    ConnectionContextStore {

    //~ Static fields/initializers ---------------------------------------------

    private static final Logger LOG = Logger.getLogger(TreppeStuetzmauerPanel.class);

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        GridBagConstraints gridBagConstraints;
        bindingGroup = new BindingGroup();

        final JPanel jPanel26 = new JPanel();
        final RoundedPanel panAllgemein5 = new RoundedPanel();
        final SemiRoundedPanel panBeschreibungTitle5 = new SemiRoundedPanel();
        final JLabel lblHeaderAllgemein6 = new JLabel();
        final JPanel panBeschreibungContent5 = new JPanel();
        final JPanel jPanel36 = new JPanel();
        final JLabel jLabel62 = new JLabel();
        final JPanel jPanel1 = new JPanel();
        final JLabel jLabel2 = new JLabel();
        jXHyperlink1 = new JXHyperlink();
        final Box.Filler filler1 = new Box.Filler(new Dimension(0, 0), new Dimension(0, 0), new Dimension(32767, 0));
        jTextField1 = new JTextField();
        final JLabel lblSide = new JLabel();
        cbSide = new SideComboBox();
        final JLabel jLabel79 = new JLabel();
        jTextField2 = new JTextField();
        final JLabel jLabel78 = new JLabel();
        jTextField3 = new JTextField();
        final JScrollPane jScrollPane5 = new JScrollPane();
        jTextArea4 = new JTextArea();
        final JLabel jLabel66 = new JLabel();
        final Box.Filler filler6 = new Box.Filler(new Dimension(0, 0), new Dimension(0, 0), new Dimension(0, 32767));
        final Box.Filler filler2 = new Box.Filler(new Dimension(0, 0), new Dimension(0, 0), new Dimension(0, 32767));
        final JPanel jPanel3 = new JPanel();
        treppeBauteilZustandKostenPanel4 = new TreppeBauteilZustandKostenPanel(false, true);
        final Box.Filler filler4 = new Box.Filler(new Dimension(0, 0), new Dimension(0, 0), new Dimension(0, 32767));
        btnRemoveArt1 = new JButton();
        final JSeparator jSeparator1 = new JSeparator();
        final Box.Filler filler3 = new Box.Filler(new Dimension(0, 0), new Dimension(0, 0), new Dimension(0, 32767));

        final FormListener formListener = new FormListener();

        setName("Form"); // NOI18N
        setOpaque(false);
        setLayout(new GridBagLayout());

        jPanel26.setName("jPanel26"); // NOI18N
        jPanel26.setOpaque(false);
        jPanel26.setLayout(new GridBagLayout());

        panAllgemein5.setName("panAllgemein5"); // NOI18N
        panAllgemein5.setLayout(new GridBagLayout());

        panBeschreibungTitle5.setBackground(new Color(51, 51, 51));
        panBeschreibungTitle5.setName("panBeschreibungTitle5"); // NOI18N
        panBeschreibungTitle5.setLayout(new FlowLayout());

        lblHeaderAllgemein6.setForeground(new Color(255, 255, 255));
        lblHeaderAllgemein6.setHorizontalAlignment(SwingConstants.CENTER);
        Mnemonics.setLocalizedText(
            lblHeaderAllgemein6,
            NbBundle.getMessage(TreppeStuetzmauerPanel.class, "TreppeStuetzmauerPanel.lblHeaderAllgemein6.text")); // NOI18N
        lblHeaderAllgemein6.setName("lblHeaderAllgemein6");                                                        // NOI18N
        panBeschreibungTitle5.add(lblHeaderAllgemein6);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.NORTH;
        panAllgemein5.add(panBeschreibungTitle5, gridBagConstraints);

        panBeschreibungContent5.setName("panBeschreibungContent5"); // NOI18N
        panBeschreibungContent5.setOpaque(false);
        panBeschreibungContent5.setLayout(new GridBagLayout());

        jPanel36.setName("jPanel36"); // NOI18N
        jPanel36.setOpaque(false);
        jPanel36.setLayout(new GridBagLayout());

        Mnemonics.setLocalizedText(
            jLabel62,
            NbBundle.getMessage(TreppeStuetzmauerPanel.class, "TreppeStuetzmauerPanel.jLabel62.text")); // NOI18N
        jLabel62.setName("jLabel62");                                                                   // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new Insets(1, 0, 1, 5);
        jPanel36.add(jLabel62, gridBagConstraints);

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setOpaque(false);
        jPanel1.setLayout(new GridBagLayout());

        Mnemonics.setLocalizedText(
            jLabel2,
            NbBundle.getMessage(TreppeStuetzmauerPanel.class, "TreppeStuetzmauerPanel.jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2");                                                                    // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new Insets(1, 10, 1, 5);
        jPanel1.add(jLabel2, gridBagConstraints);

        jXHyperlink1.setName("jXHyperlink1"); // NOI18N

        Binding binding = Bindings.createAutoBinding(
                AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                ELProperty.create("${mauerBean.mauer_nummer}"),
                jXHyperlink1,
                BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jXHyperlink1.addActionListener(formListener);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new Insets(1, 0, 1, 0);
        jPanel1.add(jXHyperlink1, gridBagConstraints);

        filler1.setName("filler1"); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 60;
        jPanel1.add(filler1, gridBagConstraints);

        jTextField1.setEditable(false);
        jTextField1.setName("jTextField1"); // NOI18N

        binding = Bindings.createAutoBinding(
                AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                ELProperty.create("${mauerBean.lagebezeichnung}"),
                jTextField1,
                BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new Insets(1, 0, 1, 0);
        jPanel1.add(jTextField1, gridBagConstraints);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new Insets(1, 0, 1, 0);
        jPanel36.add(jPanel1, gridBagConstraints);

        Mnemonics.setLocalizedText(
            lblSide,
            NbBundle.getMessage(TreppeStuetzmauerPanel.class, "TreppeStuetzmauerPanel.lblSide.text", new Object[] {
                }));                // NOI18N
        lblSide.setName("lblSide"); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new Insets(1, 0, 1, 5);
        jPanel36.add(lblSide, gridBagConstraints);

        cbSide.setName("cbSide"); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new Insets(1, 0, 1, 0);
        jPanel36.add(cbSide, gridBagConstraints);

        Mnemonics.setLocalizedText(
            jLabel79,
            NbBundle.getMessage(TreppeStuetzmauerPanel.class, "TreppeStuetzmauerPanel.jLabel79.text")); // NOI18N
        jLabel79.setName("jLabel79");                                                                   // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new Insets(1, 0, 1, 5);
        jPanel36.add(jLabel79, gridBagConstraints);

        jTextField2.setEditable(false);
        jTextField2.setName("jTextField2"); // NOI18N

        binding = Bindings.createAutoBinding(
                AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                ELProperty.create("${mauerBean.stuetzmauertyp.name}"),
                jTextField2,
                BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new Insets(1, 0, 1, 0);
        jPanel36.add(jTextField2, gridBagConstraints);

        Mnemonics.setLocalizedText(
            jLabel78,
            NbBundle.getMessage(TreppeStuetzmauerPanel.class, "TreppeStuetzmauerPanel.jLabel78.text")); // NOI18N
        jLabel78.setName("jLabel78");                                                                   // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new Insets(1, 0, 1, 5);
        jPanel36.add(jLabel78, gridBagConstraints);

        jTextField3.setName("jTextField3"); // NOI18N

        binding = Bindings.createAutoBinding(
                AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                ELProperty.create("${cidsBean.wo}"),
                jTextField3,
                BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new Insets(1, 0, 1, 0);
        jPanel36.add(jTextField3, gridBagConstraints);

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        jTextArea4.setColumns(20);
        jTextArea4.setLineWrap(true);
        jTextArea4.setWrapStyleWord(true);
        jTextArea4.setName("jTextArea4"); // NOI18N

        binding = Bindings.createAutoBinding(
                AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                ELProperty.create("${cidsBean.bemerkung}"),
                jTextArea4,
                BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jScrollPane5.setViewportView(jTextArea4);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new Insets(1, 0, 1, 0);
        jPanel36.add(jScrollPane5, gridBagConstraints);

        Mnemonics.setLocalizedText(
            jLabel66,
            NbBundle.getMessage(TreppeStuetzmauerPanel.class, "TreppeStuetzmauerPanel.jLabel66.text")); // NOI18N
        jLabel66.setVerticalAlignment(SwingConstants.TOP);
        jLabel66.setName("jLabel66");                                                                   // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new Insets(1, 0, 1, 5);
        jPanel36.add(jLabel66, gridBagConstraints);

        filler6.setName("filler6"); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new Insets(19, 0, 19, 0);
        jPanel36.add(filler6, gridBagConstraints);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new Insets(5, 5, 5, 5);
        panBeschreibungContent5.add(jPanel36, gridBagConstraints);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panAllgemein5.add(panBeschreibungContent5, gridBagConstraints);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.anchor = GridBagConstraints.NORTH;
        jPanel26.add(panAllgemein5, gridBagConstraints);

        filler2.setName("filler2"); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel26.add(filler2, gridBagConstraints);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new Insets(0, 0, 0, 5);
        add(jPanel26, gridBagConstraints);

        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setOpaque(false);
        jPanel3.setLayout(new GridBagLayout());

        treppeBauteilZustandKostenPanel4.setName("treppeBauteilZustandKostenPanel4"); // NOI18N

        binding = Bindings.createAutoBinding(
                AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                ELProperty.create("${zustandBean}"),
                treppeBauteilZustandKostenPanel4,
                BeanProperty.create("cidsBean"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(treppeBauteilZustandKostenPanel4, gridBagConstraints);

        filler4.setName("filler4"); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(filler4, gridBagConstraints);

        btnRemoveArt1.setIcon(new ImageIcon(
                getClass().getResource("/de/cismet/cids/custom/objecteditors/wunda_blau/edit_remove_mini.png"))); // NOI18N
        btnRemoveArt1.setBorderPainted(false);
        btnRemoveArt1.setContentAreaFilled(false);
        btnRemoveArt1.setName("btnRemoveArt1");                                                                   // NOI18N
        btnRemoveArt1.addActionListener(formListener);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = GridBagConstraints.SOUTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new Insets(5, 0, 0, 0);
        jPanel3.add(btnRemoveArt1, gridBagConstraints);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.insets = new Insets(0, 5, 0, 0);
        add(jPanel3, gridBagConstraints);

        jSeparator1.setName("jSeparator1"); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.insets = new Insets(5, 0, 0, 0);
        add(jSeparator1, gridBagConstraints);

        filler3.setName("filler3"); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        add(filler3, gridBagConstraints);

        bindingGroup.bind();
    }

    /**
     * Code for dispatching events from components to event handlers.
     *
     * @version  $Revision$, $Date$
     */
    private class FormListener implements ActionListener {

        /**
         * Creates a new FormListener object.
         */
        FormListener() {
        }

        @Override
        public void actionPerformed(final ActionEvent evt) {
            if (evt.getSource() == jXHyperlink1) {
                TreppeStuetzmauerPanel.this.jXHyperlink1ActionPerformed(evt);
            } else if (evt.getSource() == btnRemoveArt1) {
                TreppeStuetzmauerPanel.this.btnRemoveArt1ActionPerformed(evt);
            }
        }
    } // </editor-fold>//GEN-END:initComponents

    //~ Instance fields --------------------------------------------------------

    private CidsBean cidsBean;
    private CidsBean mauerBean;
    private CidsBean zustandBean;
    private TreppeStuetzmauernPanel parent;
    private final boolean editable;
    private ConnectionContext connectionContext = ConnectionContext.createDeprecated();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    JButton btnRemoveArt1;
    SideComboBox cbSide;
    JTextArea jTextArea4;
    JTextField jTextField1;
    JTextField jTextField2;
    JTextField jTextField3;
    JXHyperlink jXHyperlink1;
    TreppeBauteilZustandKostenPanel treppeBauteilZustandKostenPanel4;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates a new TreppeStuetzmauerPanel object.
     */
    public TreppeStuetzmauerPanel() {
        this(true);
    }

    /**
     * Creates new form TreppeStuetzmauerPanel.
     *
     * @param  editable  DOCUMENT ME!
     */
    public TreppeStuetzmauerPanel(final boolean editable) {
        this.editable = editable;
        initComponents();

        btnRemoveArt1.setVisible(false);
        jTextArea4.addKeyListener(new RendererTools.NoTabTextAreaKeyAdapter());
        if (!editable) {
            RendererTools.makeReadOnly(jTextField1);
            RendererTools.makeReadOnly(jTextField2);
            RendererTools.makeReadOnly(jTextField3);
            RendererTools.makeReadOnly(jTextArea4);
            RendererTools.makeReadOnly(cbSide);
        }
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void btnRemoveArt1ActionPerformed(final ActionEvent evt) { //GEN-FIRST:event_btnRemoveArt1ActionPerformed
        parent.getCidsBeans().remove(cidsBean);
        parent.removeMauerPanel(this);
    }                                                                  //GEN-LAST:event_btnRemoveArt1ActionPerformed

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void jXHyperlink1ActionPerformed(final ActionEvent evt) { //GEN-FIRST:event_jXHyperlink1ActionPerformed
        ComponentRegistry.getRegistry().getDescriptionPane().gotoMetaObjectNode(new MetaObjectNode(mauerBean), false);
    }                                                                 //GEN-LAST:event_jXHyperlink1ActionPerformed

    @Override
    public CidsBean getCidsBean() {
        return cidsBean;
    }

    /**
     * DOCUMENT ME!
     *
     * @param  mauerBean  DOCUMENT ME!
     */
    public void setMauerBean(final CidsBean mauerBean) {
        this.mauerBean = mauerBean;
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    public CidsBean getMauerBean() {
        return mauerBean;
    }

    @Override
    public void setCidsBean(final CidsBean cidsBean) {
        bindingGroup.unbind();
        this.cidsBean = cidsBean;
        cbSide.setCidsBean(cidsBean);

        final Integer mauerId = (Integer)cidsBean.getProperty("mauer");
        if ((mauerId != null)) {
            new SwingWorker<CidsBean, Void>() {

                    @Override
                    protected CidsBean doInBackground() throws Exception {
                        final MetaClass mc = CidsBean.getMetaClassFromTableName(
                                "WUNDA_BLAU",
                                "mauer",
                                getConnectionContext());
                        final MetaObject mo = SessionManager.getProxy()
                                    .getMetaObject(mauerId, mc.getID(), "WUNDA_BLAU", getConnectionContext());
                        final CidsBean mauerBean = mo.getBean();

                        final Integer kostenGelaender = (Integer)mauerBean.getProperty("san_kosten_gelaender");
                        final Integer kostenGruendung = (Integer)mauerBean.getProperty("san_kosten_gruendung");
                        final Integer kostenverformung = (Integer)mauerBean.getProperty("san_kosten_verformung");
                        final Integer kostenGelaende = (Integer)mauerBean.getProperty("san_kosten_gelaende");
                        final Integer kostenAnsicht = (Integer)mauerBean.getProperty("san_kosten_ansicht");
                        final Integer kostenKopf = (Integer)mauerBean.getProperty("san_kosten_kopf");

                        double summe = 0;
                        summe += (kostenGelaender != null) ? kostenGelaender : 0;
                        summe += (kostenGruendung != null) ? kostenGruendung : 0;
                        summe += (kostenverformung != null) ? kostenverformung : 0;
                        summe += (kostenGelaende != null) ? kostenGelaende : 0;
                        summe += (kostenAnsicht != null) ? kostenAnsicht : 0;
                        summe += (kostenKopf != null) ? kostenKopf : 0;

                        final CidsBean zustandBean = CidsBean.createNewCidsBeanFromTableName(
                                "WUNDA_BLAU",
                                "TREPPE_ZUSTAND",
                                getConnectionContext());
                        zustandBean.setProperty("verkehrssicherheit", null);
                        zustandBean.setProperty("dauerhaftigkeit", null);
                        zustandBean.setProperty("standsicherheit", null);
                        zustandBean.setProperty("sanierungsmassnahmen", "siehe Mauer-Beschreibung");
                        zustandBean.setProperty("gesamt", mauerBean.getProperty("zustand_gesamt"));
                        zustandBean.setProperty("kosten", summe);
                        setZustandBean(zustandBean);

                        return mauerBean;
                    }

                    @Override
                    protected void done() {
                        try {
                            final CidsBean mauerBean = get();
                            setMauerBean(mauerBean);
                            bindingGroup.bind();
                        } catch (final Exception ex) {
                            final String message = "Fehler beim Laden der Stützmauer. (mauerId: " + mauerId
                                        + ")";
                            LOG.error(message, ex);
                            ObjectRendererUtils.showExceptionWindowToUser(
                                message,
                                ex,
                                TreppeStuetzmauerPanel.this);
                        }
                    }
                }.execute();
        }
    }

    /**
     * DOCUMENT ME!
     *
     * @param  parent  DOCUMENT ME!
     */
    public void setParent(final TreppeStuetzmauernPanel parent) {
        this.parent = parent;
    }

    /**
     * DOCUMENT ME!
     *
     * @param  zustandBean  DOCUMENT ME!
     */
    void setZustandBean(final CidsBean zustandBean) {
        this.zustandBean = zustandBean;
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    public CidsBean getZustandBean() {
        return zustandBean;
    }

    @Override
    public void dispose() {
        bindingGroup.unbind();

        parent = null;
        cidsBean = null;
        mauerBean = null;
        zustandBean = null;
        treppeBauteilZustandKostenPanel4.dispose();
        cbSide.setCidsBean(null);
    }

    @Override
    public void initWithConnectionContext(final ConnectionContext cc) {
        this.connectionContext = cc;
    }

    @Override
    public ConnectionContext getConnectionContext() {
        return this.connectionContext;
    }
}
