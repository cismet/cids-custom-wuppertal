/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.cismet.cids.custom.objecteditors.wunda_blau.albo;

import Sirius.navigator.connection.SessionManager;
import Sirius.navigator.ui.ComponentRegistry;

import Sirius.server.middleware.types.MetaObject;
import Sirius.server.middleware.types.MetaObjectNode;

import com.vividsolutions.jts.geom.Geometry;

import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.swingx.JXTable;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import javax.swing.DefaultListModel;
import javax.swing.SwingWorker;

import de.cismet.cids.custom.objecteditors.utils.RendererTools;
import de.cismet.cids.custom.utils.CidsBeansTableModel;
import de.cismet.cids.custom.wunda_blau.search.server.AlboVorgangLightweightSearch;
import de.cismet.cids.custom.wunda_blau.search.server.AlboVorgangSearch;
import de.cismet.cids.custom.wunda_blau.search.server.BplaeneSearch;

import de.cismet.cids.dynamics.CidsBean;

import de.cismet.cids.editors.DefaultBindableScrollableComboBox;
import de.cismet.cids.editors.EditorClosedEvent;

import de.cismet.cids.navigator.utils.CidsBeanDropListener;
import de.cismet.cids.navigator.utils.CidsBeanDropTarget;

import de.cismet.connectioncontext.AbstractConnectionContext;
import de.cismet.connectioncontext.ConnectionContext;

/**
 * DOCUMENT ME!
 *
 * @author   jruiz
 * @version  $Revision$, $Date$
 */
public class AlboFlaecheMainPanel extends AbstractAlboFlaechePanel {

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        comboBoxFilterDialog1 = AlboFlaecheVorgangFilterDialog.getInstance();
        panLinks = new javax.swing.JPanel();
        panBeschreibung = new javax.swing.JPanel();
        alboFlaecheBeschreibungPanel1 =
            new de.cismet.cids.custom.objecteditors.wunda_blau.albo.AlboFlaecheMainBeschreibungPanel(isEditable());
        panTop = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        filler69 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0),
                new java.awt.Dimension(0, 0),
                new java.awt.Dimension(32767, 0));
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        filler58 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0),
                new java.awt.Dimension(0, 0),
                new java.awt.Dimension(32767, 0));
        jLabel36 = new javax.swing.JLabel();
        cbFlaechentyp = new DefaultBindableScrollableComboBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0),
                new java.awt.Dimension(0, 0),
                new java.awt.Dimension(0, 32767));
        jScrollPane4 = new javax.swing.JScrollPane();
        jXTable1 = new DroppedBeansTable();
        panRechts = new javax.swing.JPanel();
        panOrt = new javax.swing.JPanel();
        alboFlaecheOrtPanel1 = new de.cismet.cids.custom.objecteditors.wunda_blau.albo.AlboFlaecheMainOrtPanel(
                isEditable());
        jPanel9 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        panSpezifisch = new javax.swing.JPanel();
        panStandort = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        alboFlaecheStandortePanel1 =
            new de.cismet.cids.custom.objecteditors.wunda_blau.albo.AlboFlaecheMainStandortePanel(isEditable());
        filler29 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0),
                new java.awt.Dimension(0, 0),
                new java.awt.Dimension(32767, 32767));
        panAltablagerung = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        alboFlaecheAltablagerungPanel1 =
            new de.cismet.cids.custom.objecteditors.wunda_blau.albo.AlboFlaecheMainAltablagerungPanel(isEditable());
        filler27 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0),
                new java.awt.Dimension(0, 0),
                new java.awt.Dimension(32767, 32767));
        panSonstige = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();
        filler35 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0),
                new java.awt.Dimension(0, 0),
                new java.awt.Dimension(32767, 32767));
        panMaterialaufbringung = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        alboFlaecheMaterialaufbringungPanel1 =
            new de.cismet.cids.custom.objecteditors.wunda_blau.albo.AlboFlaecheMainMaterialaufbringungPanel(
                isEditable());
        filler38 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0),
                new java.awt.Dimension(0, 0),
                new java.awt.Dimension(32767, 32767));
        panOhneVerdacht = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        filler39 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0),
                new java.awt.Dimension(0, 0),
                new java.awt.Dimension(32767, 32767));

        final FormListener formListener = new FormListener();

        comboBoxFilterDialog1.setName("comboBoxFilterDialog1"); // NOI18N

        setName("Form"); // NOI18N
        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        panLinks.setName("panLinks"); // NOI18N
        panLinks.setOpaque(false);
        panLinks.setLayout(new java.awt.GridBagLayout());

        panBeschreibung.setBorder(javax.swing.BorderFactory.createTitledBorder("<html><b>Beschreibung"));
        panBeschreibung.setName("panBeschreibung"); // NOI18N
        panBeschreibung.setOpaque(false);
        panBeschreibung.setLayout(new java.awt.GridBagLayout());

        alboFlaecheBeschreibungPanel1.setName("alboFlaecheBeschreibungPanel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panBeschreibung.add(alboFlaecheBeschreibungPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panLinks.add(panBeschreibung, gridBagConstraints);

        panTop.setOpaque(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_ONCE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${UIClassID}"),
                panTop,
                org.jdesktop.beansbinding.BeanProperty.create("name"));
        bindingGroup.addBinding(binding);

        panTop.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, "Erhebungs-Nr.:");
        jLabel8.setName("jLabel8"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panTop.add(jLabel8, gridBagConstraints);

        jTextField9.setName("jTextField9"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.erhebungsnummer}"),
                jTextField9,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panTop.add(jTextField9, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, "Landesregistrier-Nr.:");
        jLabel9.setName("jLabel9"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panTop.add(jLabel9, gridBagConstraints);

        jTextField11.setName("jTextField11"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.landesregistriernummer}"),
                jTextField11,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panTop.add(jTextField11, gridBagConstraints);

        filler69.setName("filler69"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.weightx = 1.0;
        panTop.add(filler69, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, "Geodaten-ID:");
        jLabel7.setName("jLabel7"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 10, 2, 2);
        panTop.add(jLabel7, gridBagConstraints);

        jTextField6.setName("jTextField6"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.geodaten_id}"),
                jTextField6,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panTop.add(jTextField6, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, "Lfd. Nummer:");
        jLabel10.setName("jLabel10"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panTop.add(jLabel10, gridBagConstraints);

        jTextField12.setName("jTextField12"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.laufende_nummer}"),
                jTextField12,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panTop.add(jTextField12, gridBagConstraints);

        filler58.setName("filler58"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 75;
        gridBagConstraints.weightx = 1.0;
        panTop.add(filler58, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel36, "Gesamt-/Teilfläche:");
        jLabel36.setName("jLabel36"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 10, 2, 2);
        panTop.add(jLabel36, gridBagConstraints);

        cbFlaechentyp.setName("cbFlaechentyp"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.fk_typ}"),
                cbFlaechentyp,
                org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panTop.add(cbFlaechentyp, gridBagConstraints);
        ((DefaultBindableScrollableComboBox)cbFlaechentyp).setNullable(true);

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setOpaque(false);
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel10.setName("jPanel10"); // NOI18N
        jPanel10.setOpaque(false);
        jPanel10.setLayout(new java.awt.GridBagLayout());

        jButton3.setIcon(new javax.swing.ImageIcon(
                getClass().getResource("/de/cismet/cids/custom/optionspanels/wunda_blau/add.png"))); // NOI18N
        jButton3.setName("jButton3");                                                                // NOI18N
        jButton3.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel10.add(jButton3, gridBagConstraints);
        jButton3.setVisible(isEditable());

        jButton2.setIcon(new javax.swing.ImageIcon(
                getClass().getResource("/de/cismet/cids/custom/optionspanels/wunda_blau/remove.png"))); // NOI18N
        jButton2.setName("jButton2");                                                                   // NOI18N
        jButton2.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel10.add(jButton2, gridBagConstraints);
        jButton2.setVisible(isEditable());

        filler7.setName("filler7"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(filler7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel2.add(jPanel10, gridBagConstraints);

        jScrollPane4.setMinimumSize(new java.awt.Dimension(26, 100));
        jScrollPane4.setName("jScrollPane4"); // NOI18N
        jScrollPane4.setPreferredSize(new java.awt.Dimension(2, 100));

        jXTable1.setModel(new FlaecheVorgangTableModel());
        jXTable1.setName("jXTable1"); // NOI18N
        jXTable1.setVisibleRowCount(4);
        jXTable1.addMouseListener(formListener);
        jScrollPane4.setViewportView(jXTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 2, 2, 2);
        panTop.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 5, 15);
        panLinks.add(panTop, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(panLinks, gridBagConstraints);

        panRechts.setName("panRechts"); // NOI18N
        panRechts.setOpaque(false);
        panRechts.setLayout(new java.awt.GridBagLayout());

        panOrt.setBorder(javax.swing.BorderFactory.createTitledBorder("<html><b>Karte"));
        panOrt.setName("panOrt"); // NOI18N
        panOrt.setOpaque(false);
        panOrt.setLayout(new java.awt.GridBagLayout());

        alboFlaecheOrtPanel1.setName("alboFlaecheOrtPanel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panOrt.add(alboFlaecheOrtPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panRechts.add(panOrt, gridBagConstraints);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("B-Pläne"));
        jPanel9.setName("jPanel9"); // NOI18N
        jPanel9.setOpaque(false);
        jPanel9.setLayout(new java.awt.GridBagLayout());

        jScrollPane3.setMinimumSize(new java.awt.Dimension(26, 66));
        jScrollPane3.setName("jScrollPane3"); // NOI18N

        jList2.setName("jList2"); // NOI18N
        jList2.setVisibleRowCount(4);
        jList2.addMouseListener(formListener);
        jScrollPane3.setViewportView(jList2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(jScrollPane3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panRechts.add(jPanel9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        add(panRechts, gridBagConstraints);

        panSpezifisch.setName("panSpezifisch"); // NOI18N
        panSpezifisch.setOpaque(false);
        panSpezifisch.setLayout(new java.awt.CardLayout());

        panStandort.setName("panStandort"); // NOI18N
        panStandort.setOpaque(false);
        panStandort.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("<html><b>Standort"));
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        alboFlaecheStandortePanel1.setName("alboFlaecheStandortePanel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(alboFlaecheStandortePanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panStandort.add(jPanel1, gridBagConstraints);

        filler29.setName("filler29"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panStandort.add(filler29, gridBagConstraints);

        panSpezifisch.add(panStandort, "standort");

        panAltablagerung.setName("panAltablagerung"); // NOI18N
        panAltablagerung.setOpaque(false);
        panAltablagerung.setLayout(new java.awt.GridBagLayout());

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("<html><b>Altablagerung"));
        jPanel11.setName("jPanel11"); // NOI18N
        jPanel11.setOpaque(false);
        jPanel11.setLayout(new java.awt.GridBagLayout());

        alboFlaecheAltablagerungPanel1.setName("alboFlaecheAltablagerungPanel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel11.add(alboFlaecheAltablagerungPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panAltablagerung.add(jPanel11, gridBagConstraints);

        filler27.setName("filler27"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panAltablagerung.add(filler27, gridBagConstraints);

        panSpezifisch.add(panAltablagerung, "altablagerung");

        panSonstige.setName("panSonstige"); // NOI18N
        panSonstige.setOpaque(false);
        panSonstige.setLayout(new java.awt.GridBagLayout());

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder(
                "<html><b>sonstige stoffliche Bodenveränderung"));
        jPanel21.setName("jPanel21"); // NOI18N
        jPanel21.setOpaque(false);
        jPanel21.setLayout(new java.awt.GridBagLayout());

        jLabel55.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel55, "....");
        jLabel55.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel55.setName("jLabel55"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel21.add(jLabel55, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panSonstige.add(jPanel21, gridBagConstraints);

        filler35.setName("filler35"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panSonstige.add(filler35, gridBagConstraints);

        panSpezifisch.add(panSonstige, "sonstige");

        panMaterialaufbringung.setName("panMaterialaufbringung"); // NOI18N
        panMaterialaufbringung.setOpaque(false);
        panMaterialaufbringung.setLayout(new java.awt.GridBagLayout());

        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder("<html><b>Unsachgemäße Materialaufbringung"));
        jPanel22.setName("jPanel22"); // NOI18N
        jPanel22.setOpaque(false);
        jPanel22.setLayout(new java.awt.GridBagLayout());

        alboFlaecheMaterialaufbringungPanel1.setName("alboFlaecheMaterialaufbringungPanel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel22.add(alboFlaecheMaterialaufbringungPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panMaterialaufbringung.add(jPanel22, gridBagConstraints);

        filler38.setName("filler38"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panMaterialaufbringung.add(filler38, gridBagConstraints);

        panSpezifisch.add(panMaterialaufbringung, "materialaufbringung");

        panOhneVerdacht.setName("panOhneVerdacht"); // NOI18N
        panOhneVerdacht.setOpaque(false);
        panOhneVerdacht.setLayout(new java.awt.GridBagLayout());

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder("<html><b>Untersucht ohne Verdacht"));
        jPanel20.setName("jPanel20"); // NOI18N
        jPanel20.setOpaque(false);
        jPanel20.setLayout(new java.awt.GridBagLayout());

        jLabel54.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.openide.awt.Mnemonics.setLocalizedText(
            jLabel54,
            "<html><b><big>Fläche wurde ohne Anfangsverdacht untersucht.");
        jLabel54.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel54.setName("jLabel54"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel20.add(jLabel54, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panOhneVerdacht.add(jPanel20, gridBagConstraints);

        filler39.setName("filler39"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panOhneVerdacht.add(filler39, gridBagConstraints);

        panSpezifisch.add(panOhneVerdacht, "ohneVerdacht");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(panSpezifisch, gridBagConstraints);

        bindingGroup.bind();
    }

    /**
     * Code for dispatching events from components to event handlers.
     *
     * @version  $Revision$, $Date$
     */
    private class FormListener implements java.awt.event.ActionListener, java.awt.event.MouseListener {

        /**
         * Creates a new FormListener object.
         */
        FormListener() {
        }

        @Override
        public void actionPerformed(final java.awt.event.ActionEvent evt) {
            if (evt.getSource() == jButton3) {
                AlboFlaecheMainPanel.this.jButton3ActionPerformed(evt);
            } else if (evt.getSource() == jButton2) {
                AlboFlaecheMainPanel.this.jButton2ActionPerformed(evt);
            }
        }

        @Override
        public void mouseClicked(final java.awt.event.MouseEvent evt) {
            if (evt.getSource() == jXTable1) {
                AlboFlaecheMainPanel.this.jXTable1MouseClicked(evt);
            } else if (evt.getSource() == jList2) {
                AlboFlaecheMainPanel.this.jList2MouseClicked(evt);
            }
        }

        @Override
        public void mouseEntered(final java.awt.event.MouseEvent evt) {
        }

        @Override
        public void mouseExited(final java.awt.event.MouseEvent evt) {
        }

        @Override
        public void mousePressed(final java.awt.event.MouseEvent evt) {
        }

        @Override
        public void mouseReleased(final java.awt.event.MouseEvent evt) {
        }
    } // </editor-fold>//GEN-END:initComponents

    private static final String[] COLUMN_PROPERTIES = new String[] {
            "schluessel",
            "regal_nummer",
            "fk_art.name",
            "ordner_nummer"
        };
    private static final String[] COLUMN_NAMES = new String[] {
            "Vorgang",
            "Regal",
            "Ordner-Art",
            "Ordner-Nummer"
        };
    private static final Class[] COLUMN_CLASSES = new Class[] {
            String.class, // Schlüssel
            String.class, // Regal
            String.class, // Ordner-Nummer
            String.class, // Ordner-Art
        };

    //~ Instance fields --------------------------------------------------------

    private boolean unlocked = false;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private de.cismet.cids.custom.objecteditors.wunda_blau.albo.AlboFlaecheMainAltablagerungPanel
        alboFlaecheAltablagerungPanel1;
    private de.cismet.cids.custom.objecteditors.wunda_blau.albo.AlboFlaecheMainBeschreibungPanel
        alboFlaecheBeschreibungPanel1;
    private de.cismet.cids.custom.objecteditors.wunda_blau.albo.AlboFlaecheMainMaterialaufbringungPanel
        alboFlaecheMaterialaufbringungPanel1;
    private de.cismet.cids.custom.objecteditors.wunda_blau.albo.AlboFlaecheMainOrtPanel alboFlaecheOrtPanel1;
    private de.cismet.cids.custom.objecteditors.wunda_blau.albo.AlboFlaecheMainStandortePanel
        alboFlaecheStandortePanel1;
    private javax.swing.JComboBox<String> cbFlaechentyp;
    private de.cismet.cids.custom.objecteditors.wunda_blau.albo.ComboBoxFilterDialog comboBoxFilterDialog1;
    private javax.swing.Box.Filler filler27;
    private javax.swing.Box.Filler filler29;
    private javax.swing.Box.Filler filler35;
    private javax.swing.Box.Filler filler38;
    private javax.swing.Box.Filler filler39;
    private javax.swing.Box.Filler filler58;
    private javax.swing.Box.Filler filler69;
    private javax.swing.Box.Filler filler7;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<CidsBean> jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField9;
    private org.jdesktop.swingx.JXTable jXTable1;
    private javax.swing.JPanel panAltablagerung;
    private javax.swing.JPanel panBeschreibung;
    private javax.swing.JPanel panLinks;
    private javax.swing.JPanel panMaterialaufbringung;
    private javax.swing.JPanel panOhneVerdacht;
    private javax.swing.JPanel panOrt;
    private javax.swing.JPanel panRechts;
    private javax.swing.JPanel panSonstige;
    private javax.swing.JPanel panSpezifisch;
    private javax.swing.JPanel panStandort;
    private javax.swing.JPanel panTop;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates a new AlboFlaecheMainPanel object.
     */
    public AlboFlaecheMainPanel() {
        initComponents();
    }

    /**
     * Creates a new AlboFlaecheMainPanel object.
     *
     * @param  editable  DOCUMENT ME!
     */
    public AlboFlaecheMainPanel(final boolean editable) {
        super(editable);
    }

    //~ Methods ----------------------------------------------------------------

    @Override
    protected void initGui() {
        initComponents();

        alboFlaecheBeschreibungPanel1.setMainPanel(this);
        alboFlaecheBeschreibungPanel1.setPanSpezifisch(panSpezifisch);

        if (isEditable()) {
            try {
                new CidsBeanDropTarget(jXTable1);
            } catch (final Exception ex) {
                LOG.warn("Error while creating CidsBeanDropTarget", ex); // NOI18N
            }
        }
        RendererTools.makeReadOnly(jXTable1);
        RendererTools.makeReadOnly(jList2);
    }

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void jXTable1MouseClicked(final java.awt.event.MouseEvent evt) { //GEN-FIRST:event_jXTable1MouseClicked
        if (evt.getClickCount() == 2) {
            final CidsBean vorgangBean = ((FlaecheVorgangTableModel)jXTable1.getModel()).getCidsBean(
                    jXTable1.getRowSorter().convertRowIndexToModel(jXTable1.getSelectedRow()));
            ComponentRegistry.getRegistry()
                    .getDescriptionPane()
                    .gotoMetaObjectNode(new MetaObjectNode(vorgangBean), false);
        }
    }                                                                        //GEN-LAST:event_jXTable1MouseClicked

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void jList2MouseClicked(final java.awt.event.MouseEvent evt) { //GEN-FIRST:event_jList2MouseClicked
        if (evt.getClickCount() == 2) {
            final CidsBean bplanBean = jList2.getSelectedValue();
            ComponentRegistry.getRegistry()
                    .getDescriptionPane()
                    .gotoMetaObjectNode(new MetaObjectNode(bplanBean), false);
        }
    }                                                                      //GEN-LAST:event_jList2MouseClicked

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void jButton3ActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_jButton3ActionPerformed
        final Object selectedItem = comboBoxFilterDialog1.showAndGetSelected();
        if (selectedItem instanceof CidsBean) {
            final CidsBean vorgangBean = (CidsBean)selectedItem;
            ((FlaecheVorgangTableModel)jXTable1.getModel()).add(vorgangBean);
        }
    }                                                                            //GEN-LAST:event_jButton3ActionPerformed

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void jButton2ActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_jButton2ActionPerformed
        final CidsBean flaecheBean = ((FlaecheVorgangTableModel)jXTable1.getModel()).getCidsBean(
                jXTable1.getSelectedRow());
        ((FlaecheVorgangTableModel)jXTable1.getModel()).remove(flaecheBean);
    }                                                                            //GEN-LAST:event_jButton2ActionPerformed

    @Override
    public void setCidsBean(final CidsBean cidsBean) {
        setUnlocked((cidsBean != null) && (MetaObject.NEW == cidsBean.getMetaObject().getStatus()));
        super.setCidsBean(cidsBean);
        if (cidsBean != null) {
            comboBoxFilterDialog1.refresh();
        }

        alboFlaecheBeschreibungPanel1.setCidsBean(cidsBean);
        alboFlaecheOrtPanel1.setCidsBean(cidsBean);

        updateCidsBeanOfFkPanels();

        searchVorgaenge();
        searchBplaene();
    }

    /**
     * DOCUMENT ME!
     */
    public void updateCidsBeanOfFkPanels() {
        final CidsBean cidsBean = getCidsBean();
        alboFlaecheStandortePanel1.setCidsBean(cidsBean);

        alboFlaecheMaterialaufbringungPanel1.setCidsBean((cidsBean != null)
                ? (CidsBean)cidsBean.getProperty("fk_materialaufbringung") : null);
        alboFlaecheAltablagerungPanel1.setCidsBean((cidsBean != null)
                ? (CidsBean)cidsBean.getProperty("fk_altablagerung") : null);
    }

    /**
     * DOCUMENT ME!
     *
     * @param  unlocked  DOCUMENT ME!
     */
    public void setUnlocked(final boolean unlocked) {
        this.unlocked = isEditable() ? unlocked : false;
        alboFlaecheBeschreibungPanel1.setUnlocked(unlocked);
        updateLockedFields();
    }

    /**
     * DOCUMENT ME!
     */
    private void updateLockedFields() {
        if (isEditable()) {
            RendererTools.makeReadOnly(jTextField6, !unlocked);
            RendererTools.makeReadOnly(jTextField9, !unlocked);
            RendererTools.makeReadOnly(jTextField11, !unlocked);
            RendererTools.makeReadOnly(jTextField12, !unlocked);
            RendererTools.makeReadOnly(cbFlaechentyp, !unlocked);
        }
    }

    @Override
    public void dispose() {
        alboFlaecheBeschreibungPanel1.dispose();
        alboFlaecheOrtPanel1.dispose();
        alboFlaecheStandortePanel1.dispose();
        alboFlaecheMaterialaufbringungPanel1.dispose();
        alboFlaecheAltablagerungPanel1.dispose();

        ((FlaecheVorgangTableModel)jXTable1.getModel()).clear();
        ((DefaultListModel<CidsBean>)jList2.getModel()).clear();
        super.dispose();
    }

    @Override
    public void editorClosed(final EditorClosedEvent event) {
        super.editorClosed(event);

        alboFlaecheBeschreibungPanel1.editorClosed(event);
        alboFlaecheOrtPanel1.editorClosed(event);

        alboFlaecheStandortePanel1.editorClosed(event);
        alboFlaecheMaterialaufbringungPanel1.editorClosed(event);
        alboFlaecheAltablagerungPanel1.editorClosed(event);
    }

    @Override
    public boolean prepareForSave() {
        return super.prepareForSave()
                    && alboFlaecheBeschreibungPanel1.prepareForSave()
                    && alboFlaecheOrtPanel1.prepareForSave()
                    && alboFlaecheStandortePanel1.prepareForSave()
                    && alboFlaecheMaterialaufbringungPanel1.prepareForSave()
                    && alboFlaecheAltablagerungPanel1.prepareForSave();
    }

    @Override
    public void initWithConnectionContext(final ConnectionContext connectionContext) {
        super.initWithConnectionContext(connectionContext);
        alboFlaecheBeschreibungPanel1.initWithConnectionContext(connectionContext);
        alboFlaecheOrtPanel1.initWithConnectionContext(connectionContext);
        alboFlaecheStandortePanel1.initWithConnectionContext(connectionContext);
        alboFlaecheMaterialaufbringungPanel1.initWithConnectionContext(connectionContext);
        alboFlaecheAltablagerungPanel1.initWithConnectionContext(connectionContext);
    }

    @Override
    protected BindingGroup getBindingGroup() {
        return bindingGroup;
    }

    /**
     * DOCUMENT ME!
     */
    private void searchVorgaenge() {
        jXTable1.setModel(new FlaecheVorgangTableModel());

        if (getCidsBean() != null) {
            new SwingWorker<List<CidsBean>, Void>() {

                    @Override
                    protected List<CidsBean> doInBackground() throws Exception {
                        final AlboVorgangSearch search = new AlboVorgangSearch();
                        search.setFlaecheId((Integer)getCidsBean().getProperty("id"));

                        final Collection<MetaObjectNode> mons = (Collection)SessionManager.getProxy()
                                    .customServerSearch(SessionManager.getSession().getUser(),
                                            search,
                                            getConnectionContext());

                        if (mons == null) {
                            return null;
                        }

                        final List<CidsBean> beans = new ArrayList<>();
                        for (final MetaObjectNode mon : mons) {
                            beans.add(SessionManager.getProxy().getMetaObject(
                                    mon.getObjectId(),
                                    mon.getClassId(),
                                    "WUNDA_BLAU",
                                    getConnectionContext()).getBean());
                        }
                        return beans;
                    }

                    @Override
                    protected void done() {
                        try {
                            final List<CidsBean> beans = get();
                            ((FlaecheVorgangTableModel)jXTable1.getModel()).setCidsBeans(beans);
                        } catch (final Exception ex) {
                            LOG.fatal(ex, ex);
                        }
                    }
                }.execute();
        }
    }

    /**
     * DOCUMENT ME!
     */
    private void searchBplaene() {
        jList2.setModel(new DefaultListModel<CidsBean>());
        if (getCidsBean() != null) {
            new SwingWorker<List<CidsBean>, Void>() {

                    @Override
                    protected List<CidsBean> doInBackground() throws Exception {
                        final BplaeneSearch search = new BplaeneSearch();

                        final Geometry geom = (Geometry)getCidsBean().getProperty("fk_geom.geo_field");
                        search.setGeom(geom);

                        final Collection<MetaObjectNode> mons = (Collection)SessionManager.getProxy()
                                    .customServerSearch(SessionManager.getSession().getUser(),
                                            search,
                                            getConnectionContext());

                        if (mons == null) {
                            return null;
                        }
                        final List<CidsBean> beans = new ArrayList<>();
                        for (final MetaObjectNode mon : mons) {
                            beans.add(SessionManager.getProxy().getMetaObject(
                                    mon.getObjectId(),
                                    mon.getClassId(),
                                    "WUNDA_BLAU",
                                    getConnectionContext()).getBean());
                        }
                        return beans;
                    }

                    @Override
                    protected void done() {
                        try {
                            final List<CidsBean> beans = get();
                            if (beans != null) {
                                for (final CidsBean bean : beans) {
                                    ((DefaultListModel<CidsBean>)jList2.getModel()).addElement(bean);
                                }
                            }
                        } catch (final Exception ex) {
                            LOG.fatal(ex, ex);
                        }
                    }
                }.execute();
        }
    }
    /**
     * DOCUMENT ME!
     *
     * @param  beans  DOCUMENT ME!
     */
    private void beansDroppedIntoListener(final List<CidsBean> beans) {
        if (isEditable()) {
            final List<CidsBean> flaecheBeans = ((FlaecheVorgangTableModel)jXTable1.getModel()).getCidsBeans();
            for (final CidsBean vorgangBean : beans) {
                if (vorgangBean.getMetaObject().getMetaClass().getTableName().equalsIgnoreCase("albo_vorgang")
                            && !flaecheBeans.contains(vorgangBean)) {
                    ((FlaecheVorgangTableModel)jXTable1.getModel()).add(vorgangBean);
                }
            }
        }
    }

    //~ Inner Classes ----------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @version  $Revision$, $Date$
     */
    private class DroppedBeansTable extends JXTable implements CidsBeanDropListener {

        //~ Methods ------------------------------------------------------------

        @Override
        public void beansDropped(final ArrayList<CidsBean> beans) {
            beansDroppedIntoListener(beans);
        }
    }

    /**
     * DOCUMENT ME!
     *
     * @version  $Revision$, $Date$
     */
    class FlaecheVorgangTableModel extends CidsBeansTableModel {

        //~ Constructors -------------------------------------------------------

        /**
         * Creates a new FlaecheVorgangTableModel object.
         */
        public FlaecheVorgangTableModel() {
            super(COLUMN_PROPERTIES, COLUMN_NAMES, COLUMN_CLASSES);
        }
    }

    /**
     * DOCUMENT ME!
     *
     * @version  $Revision$, $Date$
     */
    private static final class AlboFlaecheVorgangFilterDialog extends ComboBoxFilterDialog {

        //~ Static fields/initializers -----------------------------------------

        private static final AlboFlaecheVorgangFilterDialog INSTANCE = new AlboFlaecheVorgangFilterDialog();

        //~ Constructors -------------------------------------------------------

        /**
         * Creates a new AlboFlaecheVorgangFilterDialog object.
         */
        private AlboFlaecheVorgangFilterDialog() {
            super(
                null,
                new AlboVorgangLightweightSearch(),
                "Vorgang auswählen",
                ConnectionContext.create(
                    AbstractConnectionContext.Category.STATIC,
                    AlboFlaecheVorgangFilterDialog.class.getSimpleName()));
        }

        //~ Methods ------------------------------------------------------------

        /**
         * DOCUMENT ME!
         *
         * @return  DOCUMENT ME!
         */
        public static AlboFlaecheVorgangFilterDialog getInstance() {
            return INSTANCE;
        }
    }
}
